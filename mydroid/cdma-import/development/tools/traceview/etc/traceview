#!/bin/bash
#
# Copyright 2005-2006, The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script assumes that the path to this script is something like:
#
# /somepath/outdir/archdir/hostdir/bindir/traceview
#
# where "somepath" is some pathname (like "/work/android/device/")
#       "outdir"   is a subdirectory (like "out")
#       "archdir"  is a subdirectory (like "linux-x86-release")
#       "hostdir"  is a subdirectory (like "host")
#       "bindir"   is a subdirectory (like "bin")
#
# e.g. /work/android/device/out/linux-x86-release/host/bin/traceview
#
# and that the following directories also exist:
#
# /somepath/outdir/archdir/hostdir/lib/
# /somepath/outdir/archdir/hostdir/framework/
#
# where:
#       "lib", and "framework" are at the same level as "bindir",
#        and are the literal names.

# Set up prog to be the path of this script, including following symlinks,
# and set up progdir to be the fully-qualified pathname of its directory.
prog="$0"
while [ -h "${prog}" ]; do
    newProg=`/bin/ls -ld "${prog}"`
    newProg=`expr "${newProg}" : ".* -> \(.*\)$"`
    if expr "x${newProg}" : 'x/' >/dev/null; then
        prog="${newProg}"
    else
        progdir=`dirname "${prog}"`
        prog="${progdir}/${newProg}"
    fi
done
oldwd=`pwd`
progdir=`dirname "${prog}"`
progname=`basename "${prog}"`
cd "${progdir}"
progdir=`pwd`
prog="${progdir}"/"${progname}"
cd "${oldwd}"

jarfile=traceview.jar
frameworkdir="$progdir"
libdir="$progdir"
if [ ! -r "$frameworkdir/$jarfile" ]
then
    frameworkdir=`dirname "$progdir"`/tools/lib
    libdir=`dirname "$progdir"`/tools/lib
fi
if [ ! -r "$frameworkdir/$jarfile" ]
then
    frameworkdir=`dirname "$progdir"`/framework
    libdir=`dirname "$progdir"`/lib
fi
if [ ! -r "$frameworkdir/$jarfile" ]
then
    echo "${progname}: can't find $jarfile"
    exit 1
fi

os=`uname`
if [ $os == 'Darwin' ]; then
  javaOpts="-Xmx1600M -XstartOnFirstThread"
  javaCmd="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Commands/java"
else
  javaOpts="-Xmx1600M"
  javaCmd="java"
fi

while expr "x$1" : 'x-J' >/dev/null; do
    opt=`expr "$1" : '-J\(.*\)'`
    javaOpts="${javaOpts} -${opt}"
    shift
done

if [ "$OSTYPE" = "cygwin" ] ; then
    jarpath=`cygpath -w  "$frameworkdir/$jarfile"`
    progdir=`cygpath -w  "$progdir"`
else
    jarpath="$frameworkdir/$jarfile"
fi


exec "$javaCmd" $javaOpts -Djava.ext.dirs="$frameworkdir" -Djava.library.path="$libdir" -jar "$jarpath" "$@"
