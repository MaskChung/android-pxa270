page.title=Installing the SDK
@jd:body


<p>This page describes how to install the Android SDK and set up your development environment. If you haven't 
downloaded the SDK yet, you can use the link below to get started. Then read the rest of this document to learn 
how to install, configure, and use the SDK to create Android applications.</p>

<div class="linkbox"><a href="http://code.google.com/android/download.html">Download the SDK</a></div>

<h4 style="margin-top">Upgrading?</h4>

<p>If you have already developed applications using an earlier version of the 
SDK, please skip this page and read the 
<b><a href="{@docRoot}intro/upgrading.html">Upgrading the SDK</a></b> document.  
</p>


<h2 id="developmentrequirements">System and Software Requirements</h2>

<p>To develop Android applications using the code and tools in the Android SDK, 
you need a suitable development computer and development environment, as described below.</p>

<p><strong>Supported Operating Systems:</strong></p>
<ul>
  <li>Windows XP or Vista</li>
  <li>Mac OS X 10.4.8 or later (x86 only)</li>
  <li>Linux (tested on Linux Ubuntu Dapper Drake)</li>
</ul>

<p><strong>Supported Development Environments:</strong></p>
<ul>
  <li>Eclipse IDE
    <ul>
      <li><a href="http://www.eclipse.org/downloads/">Eclipse</a> 3.3 (Europa), 3.4 (Ganymede)
        <ul>
        <li>Eclipse <a href="http://www.eclipse.org/jdt">JDT</a> plugin (included in most Eclipse IDE packages) </li>
        <li><a href="http://www.eclipse.org/webtools">WST</a> (optional, but needed for the Android Editors feature; included in <a href="http://www.eclipse.org/downloads/moreinfo/compare.php">most Eclipse IDE packages</a>)</li>
        </ul>
      </li>     
      <li><a href="http://java.sun.com/javase/downloads/index.jsp">JDK 5 or JDK 6</a> (JRE alone is not sufficient)</li>
      <li><a href="installing.html#installingplugin">Android Development Tools plugin</a> (optional)</li>
      <li><strong>Not</strong> compatible with Gnu Compiler for Java (gcj)</li>
    </ul>
  </li>
  <li>Other development environments or IDEs
    <ul>
      <li><a href="http://java.sun.com/javase/downloads/index.jsp">JDK 5 or JDK 6</a> (JRE alone is not sufficient)</li>
      <li><a href="http://ant.apache.org/">Apache Ant</a> 1.6.5 or later for Linux and Mac, 1.7 or later for Windows</li>
      <li><strong>Not</strong> compatible with Gnu Compiler for Java (gcj)</li>
    </ul>
  </li>
</ul>

<p class="note"><strong>Note:</strong> If JDK is already installed on your development computer, please take a moment to make sure that it meets the version requirements listed above. In
particular, note that some Linux distributions may include JDK 1.4 or Gnu Compiler for Java, both of which are not supported for Android development. </p>

<a name="installingsdk"></a>
<a name="setup"></a>

<h2>Installing the SDK</h2>

	<p>After downloading the SDK, unpack the .zip archive to a suitable location on your machine. By default, the SDK files are unpacked into a directory named  <code>android_sdk_<em>&lt;platform</em>&gt;_<em>&lt;release&gt;</em>_<em>&lt;build&gt;</em></code>. The directory contains the subdirectories <code>tools/</code>, <code>samples/</code>, and others. </p>
	
	<p>Make a note of the name and location of the unpacked SDK directory on your system &mdash; you will need to refer to the SDK directory later, when setting up the Android plugin or using SDK tools. </p>

        <p>Optionally, you can add the path to the SDK <code>tools</code> directory to your path. As mentioned above, the <code>tools/</code> directory is located in the SDK directory. </p>
     <ul>
          <li>On Linux, edit your ~/.bash_profile or ~/.bashrc file. Look
          for a line that sets the PATH environment variable and add the
          full path to the <code>tools/</code> directory to it. If you don't 
          see a line setting the path, you can add one:</li>

          <ul><code>export PATH=${PATH}:<em>&lt;your_sdk_dir&gt;</em>/tools</code></ul>

          <li>On a Mac, look in your home directory for .bash_profile and
          proceed as for Linux. You can create the .bash_profile, if 
          you haven't already set one up on your machine. </li>

          <li>On Windows, right click on My Computer, and select Properties.  
        Under the Advanced tab, hit the Environment Variables button, and in the
        dialog that comes up, double-click on Path under System Variables. Add  the full path to the <code>tools/</code> directory to the path. </li>
        </ul>

        <p>Adding <code>tools</code> to your path lets you run Android Debug Bridge (adb) and the other command line <a href="{@docRoot}intro/tools.html">tools</a> without needing to supply the full path to the tools directory. Note that, if you update your SDK, you should remember to update your PATH settings to point to the new location, if different.</p>


<a name="installingplugin"></a>

<h2>Installing the Eclipse Plugin (ADT)</h2>

<p>If you will be using the Eclipse IDE as your environment for developing Android applications, you can install a custom plugin called Android Development Tools (ADT), which adds integrated support for Android projects and tools. The ADT plugin includes a variety of powerful extensions that make creating, running, and debugging Android applications faster and easier.</p>

<p>If you <em>will not</em> be using the Eclipse IDE, you do not need to download or install the ADT plugin.</p>

<p>To download and install the ADT plugin, follow the steps below for your respective Eclipse version. </p>

<table style="font-size:100%">
<tr><th>Eclipse 3.3 (Europa)</th><th>Eclipse 3.4 (Ganymede)</th></tr>
<tr>
<td width="50%">
<ol>
    <li>Start Eclipse, then select <strong>Help</strong> &gt; <strong>Software Updates</strong> &gt; <strong>Find
            and Install...</strong>. </li>

    <li>In the dialog that appears, select <strong>Search for new features to install</strong> and click <strong>Next</strong>. </li>
    <li>Click <strong>New Remote Site</strong>. </li>
    <li>In the resulting dialog box, enter a name for the remote site (e.g. Android Plugin) and enter this as its URL:
        <pre>https://dl-ssl.google.com/android/eclipse/</pre>

        Click <strong>OK</strong>. </li>
    <li>You should now see the new site added to the search list (and checked).
        Click <strong>Finish</strong>. </li>
    <li>In the subsequent Search Results dialog box, select the checkbox for
    <strong>Android Plugin</strong> &gt; <strong>Developer Tools</strong>.
    This will check both features:  "Android Developer Tools", and "Android
    Editors". The Android Editors feature is optional, but recommended.  If
    you choose to install it, you need the WST plugin mentioned earlier in this
    page.<br/>
    Click <strong>Next</strong>. </li>
    <li>Read the license agreement and then select <strong>Accept terms of the license agreement</strong>. 
     Click <strong>Next</strong>. </li>
    <li>Click <strong>Finish</strong>. </li>

    <li>The ADT plugin is not signed; you can accept the installation anyway
        by clicking <strong>Install All</strong>. </li>
    <li>Restart Eclipse. </li>
</ol>

</td>
<td>

<ol>
    <li>Start Eclipse, then select <strong>Help</strong> &gt; <strong>Software Updates...</strong>.
    </li>
    <li>In the dialog that appears, click the <strong>Available Software</strong> tab.
    </li>
    <li>Click <strong>Add Site...</strong>
    </li>
    <li>Enter this as the Location:
      <pre>https://dl-ssl.google.com/android/eclipse/</pre>
      Click <strong>OK</strong>. </li>
    <li>Back in the Available Software view, you should see the plugin. Select the checkbox next to 
      <em>Developer Tools</em>  and click <strong>Install...</strong>
    </li>
    <li>On the subsequent Install window, "Android Developer Tools", and "Android Editors" should both be checked. 
    The Android Editors feature is optional, but recommended.  If
    you choose to install it, you need the WST plugin mentioned earlier in this
    page.<br/>
        Click <strong>Finish</strong>.
     </li>
    <li>Restart Eclipse. </li>
</ol>

</td>
</tr>
</table>

<p>After restart, <strong>update your Eclipse preferences</strong> to point to the SDK directory:</p>
<ol>
    <li>Select <strong>Window</strong> &gt; <strong>Preferences...</strong> to open the Preferences
        panel. (Mac OS X: <strong>Eclipse</strong> &gt; <strong>Preferences</strong>) </li>
    <li>Select <strong>Android</strong> from the left panel. </li>
    <li>For the SDK Location in the main panel, click <strong>Browse...</strong> and locate the SDK directory. </li>
    <li>Click <strong>Apply</strong>, then <strong>OK</strong>.</li>
</ol>

<h3>Troubleshooting ADT Installation</h3>
<p> 
If you are having trouble downloading the ADT plugin after following the steps above, here are some suggestions: </p>

<ul>
	<li>In Step 4, try changing the remote update site URL to use <code>http</code>, rather than <code>https</code>. </li>
	<li>If you are behind a firewall (such as a corporate firewall), make
        sure that you have properly configured your proxy settings in Eclipse.
        In Eclipse 3.3/3.4, you can configure proxy information from the main
        Eclipse menu in <strong>Window</strong> (on Mac, <strong>Eclipse</strong>) &gt; <strong>Preferences</strong> &gt; <strong>General</strong> &gt; <strong>Network Connections</strong>.</li>
</ul>
<p> 
If you are still unable to use Eclipse to download the ADT plugin, follow these steps to download and install the plugin from your computer:
</p>
<ol>
<li><a href="{@docRoot}adt_download.html">Download the ADT zip file</a> (do not unpack it).
<li>Follow steps 1 and 2 in the default install instructions (above).
<li>In Eclipse 3.3, click <strong>New Archive Site...</strong>. <br/>
    In Eclipse 3.4, click <strong>Add Site...</strong>, then <strong>Archive...</strong>
<li>Browse and select the downloaded the zip file.
<li>Follow the remaining procedures, above, starting from steps 5.
</ol>
<p> 
Note that to update your plugin, you will have to follow these steps again instead of the default update instructions.</p>


<p>Note that the "Android Editors" feature of ADT requires several optional 
Eclipse components (for example, WST). If you encounter an error when 
installing ADT, your Eclipse installion might not include those components. 
For information about how to quickly add the necessary components to your 
Eclipse installation, see the troubleshooting topic 
<a href="{@docRoot}kb/troubleshooting.html#installeclipsecomponents">ADT Installation Error: "requires plug-in org.eclipse.wst.sse.ui"</a>.</p>

<a name="Updating_the_ADT_plugin" id="Updating_the_ADT_plugin"></a>

<h3>Updating the ADT Plugin </h3>

<p>In some cases, a new ADT plugin may become available for your existing version of the SDK. You can use the steps below to update 
the ADT plugin from inside Eclipse. </p>

<table style="font-size:100%">
<tr><th>Eclipse 3.3 (Europa)</th><th>Eclipse 3.4 (Ganymede)</th></tr>
<tr>
<td width="50%">
<ol>
    <li> Select <strong>Help</strong> &gt; <strong>Software Updates</strong> &gt; <strong>Find and Install...</strong>. </li>
    <li> Select <strong>Search for updates of the currently installed features</strong> and click <strong>Finish</strong>. </li>
    <li> If an update for ADT is available, select and install. </li>
</ol>

<p> Alternatively, </p>
<ol>
    <li> Select <strong>Help</strong> &gt; <strong>Software Updates</strong> &gt; <strong>Manage Configuration</strong>. </li>
    <li> Navigate down the tree and select <strong>Android Development Tools &lt;version&gt;</strong> </li>
    <li> Select <strong>Scan for Updates</strong> under <strong>Available Tasks</strong>.</li>
</ol>
</td>
<td>
<ol>
    <li>Select <strong>Help</strong> &gt; <strong>Software Updates...</strong></li>
    <li>Select the <strong>Installed Software</strong> tab.</li>
    <li>Click <strong>Update...</strong></li>
    <li>If an update for ADT is available, select it and click <strong>Finish</strong>.</li>
</ol>
</td>
</tr>
</table>

<a name="installnotes"></a>

<h2>Installation Notes</h2>
<h4>Ubuntu Linux Notes</h4>
<ul>
    <li>If you need help installing and configuring Java on your
development machine, you might find these resources helpful: 
        <ul>
           <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/Java </a></li>
           <li><a href="https://help.ubuntu.com/community/Java">https://help.ubuntu.com/community/JavaInstallation </a></li>
       </ul>
   </li>
<li>Here are the steps to install Java and Eclipse, prior to installing
the Android SDK and ADT Plugin.
<ol>
    <li>If you are running a 64-bit distribution on your development
machine, you need to install the <code>ia32-libs</code> package using
<code>apt-get:</code>:
        <pre>apt-get install ia32-libs</pre></li>
    <li>Next, install Java:
        <pre>apt-get install sun-java6-bin</pre></li>
    <li>The Ubuntu package manager does not currently offer an Eclipse 3.3
    version for download, so we recommend that you download Eclipse from
eclipse.org (<a
href="http://www.eclipse.org/downloads/">http://www.eclipse.org/
downloads/</a>). A Java or RCP version of Eclipse is recommended.</li>
<li>Follow the steps given in previous sections to install the SDK 
and the ADT plugin. </li>
</ol>
</ul>
<h4>Other Linux Notes</h4>
<ul>
    <li>If you encounter this error when installing the ADT Plugin for
Eclipse: 
    <pre>An error occurred during provisioning.
Cannot connect to keystore.
JKS</pre>
    your development machine lacks a suitable Java VM. Installing Sun
Java 6 will resolve this issue and you can then reinstall the ADT
Plugin.</li>
    <li>If JDK is already installed on your development computer, please
take a moment to make sure that it meets the version requirements listed
at the top of this page. In particular, note that some Linux
distributions may include JDK 1.4 or Gnu Compiler for Java, both of
which are not supported for Android development.</li>
</ul>

<a name="developingwitheclipse"></a>
<a name="existingcode"></a>
<a name="creatingaproject" id="creatingaproject"></a>
<a name="launchconfig" id="launchconfig"></a>
<a name="installingrunningdebugging" id="installingrunningdebugging"></a>
<a name="otherides" id="otherides"></a>
<a name="buildingwithant"></a>
<a name="debugging" id="debugging"></a>
<a name="additionaldebugging" id="additionaldebugging"></a>
<a name="toptips" id="toptips"></a>
<a name="debughelpers"></a>
<a name="uninstalling" id="uninstalling"></a>
<a name="tips" id="tips"></a>
<a name="eclipse" id="eclipse"></a> 
<a name="building"></a>
