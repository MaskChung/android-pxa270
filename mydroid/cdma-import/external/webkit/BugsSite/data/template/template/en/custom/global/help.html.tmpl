#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'global/help.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    #line 22 "template/en/custom/global/help.html.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
    #line 23 "template/en/custom/global/help.html.tmpl"
    $stash->set('cgi', $stash->get(['Bugzilla', 0, 'cgi', 0]));
    $output .=  "\n";
    #line 33 "template/en/custom/global/help.html.tmpl"
    if ($stash->get('help')) {
    #line 32 "template/en/custom/global/help.html.tmpl"
    if ($stash->get(['cgi', 0, 'user_agent', [ 'Mozilla/5' ]])) {
    #line 31 "template/en/custom/global/help.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('help_html');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'h'} = $value;
    $output .=  "\n      <div id=\"";
    #line 28 "template/en/custom/global/help.html.tmpl"
    $output .=  $stash->get(['h', 0, 'id', 0]);
    $output .=  "_help\" class=\"help\" style=\"display: none;\">";
    #line 29 "template/en/custom/global/help.html.tmpl"
    $output .=  $stash->get(['h', 0, 'html', 0]);
    $output .=  "      </div>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    }
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
