#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'global/code-error.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 36 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 38 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Internal Error', 1);
    $output .=  "\n";
    #line 312 "template/en/custom/global/code-error.html.tmpl"
    
    # CAPTURE
    $stash->set('error_message', do {
        my $output = '';
    #line 311 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('error') eq 'action_unrecognized') {
    $output .=  "\n    I don't recognize the value (<em>";
    #line 42 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('action');
        
        &$filter($output);
    };
    
    $output .=  "</em>)\n    of the <em>action</em> variable.\n  ";
    }
    elsif ($stash->get('error') eq 'attachment_already_obsolete') {
    $output .=  "\n    Attachment #";
    #line 46 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  " (";
    #line 46 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('description');
        
        &$filter($output);
    };
    
    $output .=  ") \n    is already obsolete.\n";
    }
    elsif ($stash->get('error') eq 'auth_err') {
    #line 50 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Internal Authentication Error');
    $output .=  "\n    ";
    $output .=  " ";
    #line 0 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $context->include(("account/auth/" . $stash->get('authmethod') . "-error.html.tmpl"));
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'authres_unhandled') {
    $output .=  "\n    An authorization handler return value was not handled by the login code.\n";
    }
    elsif ($stash->get('error') eq 'bad_page_cgi_id') {
    #line 60 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Page ID');
    $output .=  "\n    The ID <code>";
    #line 61 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('page_id');
        
        &$filter($output);
    };
    
    $output .=  "</code> is not a\n    valid page identifier.\n";
    }
    elsif ($stash->get('error') eq 'bad_arg') {
    $output .=  "\n    Bad argument <code>";
    #line 65 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('argument');
        
        &$filter($output);
    };
    
    $output .=  "</code> sent to\n    <code>";
    #line 66 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('function');
        
        &$filter($output);
    };
    
    $output .=  "</code> function.\n";
    }
    elsif ($stash->get('error') eq 'bug_error') {
    $output .=  "\n    Trying to retrieve ";
    #line 69 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 69 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  " returned \n    the error ";
    #line 70 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'error', 0]);
        
        &$filter($output);
    };
    
    $output .=  ".\n    ";
    }
    elsif ($stash->get('error') eq 'chart_data_not_generated') {
    $output .=  "\n    The tool which gathers ";
    #line 73 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " counts has not been run yet.\n        ";
    }
    elsif ($stash->get('error') eq 'chart_datafile_corrupt') {
    $output .=  "\n    The chart data file ";
    #line 76 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('file');
        
        &$filter($output);
    };
    
    $output .=  " is corrupt.\n        ";
    }
    elsif ($stash->get('error') eq 'chart_dir_nonexistent') {
    $output .=  "\n    One of the directories <tt>";
    #line 79 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dir');
        
        &$filter($output);
    };
    
    $output .=  "</tt> and \n    <tt>";
    #line 80 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('graphdir');
        
        &$filter($output);
    };
    
    $output .=  "</tt> does not exist.\n  ";
    }
    elsif ($stash->get('error') eq 'chart_file_open_fail') {
    $output .=  "\n    Unable to open the chart datafile <tt>";
    #line 83 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filename');
        
        &$filter($output);
    };
    
    $output .=  "</tt>.\n  ";
    }
    elsif ($stash->get('error') eq 'chart_lines_not_installed') {
    $output .=  "\n    Charts will not work without the Chart::Lines Perl module being installed.\n    Run checksetup.pl for installation instructions.\n";
    }
    elsif ($stash->get('error') eq 'cookies_need_value') {
    $output .=  "\n    Every cookie must have a value.\n";
    }
    elsif ($stash->get('error') eq 'field_type_mismatch') {
    $output .=  "\n    Cannot seem to handle <code>";
    #line 93 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  "</code>\n    and <code>";
    #line 94 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$filter($output);
    };
    
    $output .=  "</code> together.\n";
    }
    elsif ($stash->get('error') eq 'gd_not_installed') {
    $output .=  "\n    Charts will not work without the GD Perl module being installed.\n    Run checksetup.pl for installation instructions.\n";
    }
    elsif ($stash->get('error') eq 'illegal_content_type_method') {
    $output .=  "\n    Your form submission got corrupted somehow.  The <em>content\n    method</em> field, which specifies how the content type gets determined,\n    should have been either <em>autodetect</em>, <em>list</em>,\n    or <em>manual</em>, but was instead\n    <em>";
    #line 105 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttypemethod');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'illegal_field') {
    $output .=  "\n    A legal ";
    #line 108 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  " was not set.\n";
    }
    elsif ($stash->get('error') eq 'inactive_group') {
    $output .=  "\n    Attempted to add ";
    #line 111 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " to an inactive group, identified by the bit\n    '";
    #line 112 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bit');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'invalid_attach_id_to_obsolete') {
    $output .=  "\n     The attachment number of one of the attachments you wanted to obsolete,";
    #line 116 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  ", is invalid.\n          ";
    }
    elsif ($stash->get('error') eq 'invalid_column_name_cookie') {
    #line 119 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Column Name');
    $output .=  "\n     The custom sort order specified in your cookie contains an invalid\n     column name <em>";
    #line 121 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('fragment');
        
        &$filter($output);
    };
    
    $output .=  "</em>. \n     The cookie has been cleared.\n         ";
    }
    elsif ($stash->get('error') eq 'invalid_column_name_form') {
    #line 125 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Column Name');
    $output .=  "\n     The custom sort order specified in your form submission contains an\n     invalid column name <em>";
    #line 127 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('fragment');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n         ";
    }
    elsif ($stash->get('error') eq 'invalid_component') {
    #line 130 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Component');
    $output .=  "\n    The ";
    #line 131 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  " component doesn't exist in the ";
    #line 132 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  " product.\n    ";
    }
    elsif ($stash->get('error') eq 'invalid_dimensions') {
    #line 135 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Dimensions');
    $output .=  "\n    The width or height specified is not a positive integer.\n";
    }
    elsif ($stash->get('error') eq 'invalid_flag_association') {
    #line 139 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Flag Association');
    $output .=  "\n    Some flags do not belong to";
    #line 145 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('attach_id')) {
    $output .=  "\n      attachment ";
    #line 142 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  ".";
    }
    else {
    $output .=  "\n      ";
    #line 144 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 144 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  ".";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'invalid_isactive_flag') {
    #line 148 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid isactive flag');
    $output .=  "        \n    The active flag was improperly set.  There may be\n    a problem with ";
    #line 150 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " or ";
    #line 150 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " in your browser.\n";
    }
    elsif ($stash->get('error') eq 'invalid_series_id') {
    #line 153 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid Series');
    $output .=  "\n    The series_id ";
    #line 154 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('series_id');
        
        &$filter($output);
    };
    
    $output .=  " is not valid. It may be that\n    this series has been deleted.\n    ";
    }
    elsif ($stash->get('error') eq 'mismatched_bug_ids_on_obsolete') {
    $output .=  "\n    Attachment ";
    #line 158 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  " (";
    #line 158 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('description');
        
        &$filter($output);
    };
    
    $output .=  ") \n    is attached to ";
    #line 159 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 159 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_bug_id');
        
        &$filter($output);
    };
    
    $output .=  ", \n    but you tried to flag it as obsolete while creating a new attachment to ";
    #line 161 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 161 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('my_bug_id');
        
        &$filter($output);
    };
    
    $output .=  ".\n        ";
    }
    elsif ($stash->get('error') eq 'flag_nonexistent') {
    $output .=  "\n    There is no flag with ID #";
    #line 164 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'flags_not_available') {
    #line 167 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Flag Editing not Allowed');
    #line 174 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('type') eq 'b') {
    $output .=  "\n      Flags cannot be set or changed when\n      changing several ";
    #line 170 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " at once.";
    }
    else {
    $output .=  "\n      References to existing flags when creating\n      a new attachment are invalid.";
    }
    
    $output .=  " \n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_disabled') {
    #line 177 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Flag not Specifically Requestable');
    $output .=  "\n    The flag <em>";
    #line 178 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> is not specifically requestable.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_status_invalid') {
    $output .=  "\n    The flag status <em>";
    #line 181 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('status');
        
        &$filter($output);
    };
    
    $output .=  "</em>";
    #line 184 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('id')) {
    $output .=  "\n      for flag ID #";
    #line 183 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$filter($output);
    };
    
    }
    
    $output .=  "\n    is invalid.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_type_component_nonexistent') {
    $output .=  "\n    The component <em>";
    #line 188 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> does not exist\n    in the product <em>";
    #line 189 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_type_component_without_product') {
    $output .=  "\n    A component was selected without a product being selected.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_type_id_invalid') {
    $output .=  "\n    The flag type ID <em>";
    #line 195 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$filter($output);
    };
    
    $output .=  "</em> is not\n    a positive integer.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_inactive') {
    #line 199 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Inactive Flag Types');
    $output .=  "\n    Some flag types are inactive and cannot be used to create new flags.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_nonexistent') {
    $output .=  "\n    There is no flag type with the ID <em>";
    #line 203 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_type_product_nonexistent') {
    $output .=  "\n    The product <em>";
    #line 206 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em> does not exist.\n  ";
    }
    elsif ($stash->get('error') eq 'flag_type_target_type_invalid') {
    $output .=  "\n    The target type was neither <em>";
    #line 209 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "</em> nor <em>attachment</em>\n    but rather <em>";
    #line 210 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('target_type');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n  ";
    }
    elsif ($stash->get('error') eq 'invalid_field_name') {
    $output .=  "\n    Can't use ";
    #line 213 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  " as a field name.\n";
    }
    elsif ($stash->get('error') eq 'invalid_keyword_id') {
    $output .=  "\n    The keyword ID <em>";
    #line 216 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('id');
        
        &$filter($output);
    };
    
    $output .=  "</em> couldn't be\n    found.\n";
    }
    elsif ($stash->get('error') eq 'invalid_user_id') {
    #line 220 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Invalid User ID');
    $output .=  "\n    There is no user account with ID <em>";
    #line 221 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('userid');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'missing_bug_id') {
    $output .=  "\n    No ";
    #line 224 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ID was given.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_series_id') {
    $output .=  "\n    Having inserted a series into the database, no series_id was returned for\n    it. Series: ";
    #line 228 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'category', 0]);
        
        &$filter($output);
    };
    
    $output .=  " / \n    ";
    #line 229 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'subcategory', 0]);
        
        &$filter($output);
    };
    
    $output .=  " / \n    ";
    #line 230 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  ".\n    ";
    }
    elsif ($stash->get('error') eq 'no_y_axis_defined') {
    $output .=  "\n    No Y axis was defined when creating report. The X axis is optional,\n    but the Y axis is compulsory.\n    ";
    }
    elsif ($stash->get('error') eq 'need_quipid') {
    $output .=  "\n    A valid quipid is needed.\n";
    }
    elsif ($stash->get('error') eq 'request_queue_group_invalid') {
    $output .=  "\n    The group field <em>";
    #line 240 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group');
        
        &$filter($output);
    };
    
    $output .=  "</em> is invalid.\n";
    }
    elsif ($stash->get('error') eq 'report_axis_invalid') {
    $output .=  "\n    <em>";
    #line 243 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('val');
        
        &$filter($output);
    };
    
    $output .=  "</em> is not a valid value for \n    ";
    #line 247 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('fld') eq 'x') {
    $output .=  "the horizontal axis\n    ";
    }
    elsif ($stash->get('fld') eq 'y') {
    $output .=  "the vertical axis\n    ";
    }
    elsif ($stash->get('fld') eq 'z') {
    $output .=  "the multiple tables/images\n    ";
    }
    else {
    $output .=  "a report axis";
    }
    
    $output .=  " field.\n";
    }
    elsif ($stash->get('error') eq 'setting_info_invalid') {
    $output .=  "\n    To create a new setting, you must supply a setting name, a list of \n    value/sortindex pairs, and the devault value.\n";
    }
    elsif ($stash->get('error') eq 'setting_name_invalid') {
    $output .=  "\n    The setting name <em>";
    #line 254 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> is not a valid\n    option. Setting names must begin with a letter, and contain only\n    letters, digits, or the symbols '_', '-', '.', or ':'.\n";
    }
    elsif ($stash->get('error') eq 'setting_value_invalid') {
    $output .=  "\n    The value \"<code>";
    #line 259 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "</code>\" is not in the list of\n    legal values for the <em>";
    #line 260 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> setting.\n";
    }
    elsif ($stash->get('error') eq 'token_generation_error') {
    $output .=  "\n    Something is seriously wrong with the token generation system.\n";
    }
    elsif ($stash->get('error') eq 'template_error') {
    #line 266 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('template_error_msg');
        
        &$filter($output);
    };
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'unable_to_retrieve_password') {
    $output .=  "\n     I was unable to retrieve your old password from the database.\n";
    }
    elsif ($stash->get('error') eq 'undefined_field') {
    $output .=  "\n    Form field ";
    #line 272 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  " was not defined; ";
    #line 272 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'browserbugmessage' ]]);
    $output .=  "\n    ";
    #line 276 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('field') eq 'knob') {
    $output .=  "\n      Check that the \"Leave as...\" radio button was selected.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'unknown_action') {
    #line 283 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('action')) {
    $output .=  "\n       Unknown action ";
    #line 280 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('action');
        
        &$filter($output);
    };
    
    $output .=  "!";
    }
    else {
    $output .=  "\n       I could not figure out what you wanted to do.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'nested_transaction') {
    $output .=  "\n    Attempted to start a new transaction without finishing previous one first.\n";
    }
    elsif ($stash->get('error') eq 'not_in_transaction') {
    $output .=  "\n    Attempted to end transaction without starting one first.\n";
    }
    elsif ($stash->get('error') eq 'already_locked') {
    $output .=  "\n    Attempted to lock a table without releasing previous lock first:\n    <p>Tables already locked:<br>";
    #line 293 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('current');
        
        &$filter($output);
    };
    
    $output .=  "\n    <p>Tables requesting locking:<br>";
    #line 294 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('new');
        
        &$filter($output);
    };
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'no_matching_lock') {
    $output .=  "\n    Attempted to unlock tables without locking them first.\n";
    }
    elsif ($stash->get('error') eq 'comma_operator_deprecated') {
    #line 300 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'SQL query generator internal error');
    $output .=  "\n    There is an internal error in the SQL query generation code,\n    creating queries with implicit JOIN.\n";
    }
    else {
    #line 305 "template/en/custom/global/code-error.html.tmpl"
    $stash->set('title', 'Internal error');
    $output .=  "\n    An internal error has occured, but ";
    #line 306 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " doesn't know\n    what <code>";
    #line 307 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error');
        
        &$filter($output);
    };
    
    $output .=  "</code> means.\n\n    If you are a ";
    #line 309 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " end-user seeing this message, please save\n    this page and send it to ";
    #line 310 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  ".";
    }
    
        $output;
    });
    
    $output .=  "\n";
    #line 316 "template/en/custom/global/code-error.html.tmpl"
    if (!($stash->get('header_done'))) {
    #line 315 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    }
    
    $output .=  "\n\n<tt>\n  <p>";
    #line 320 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " has suffered an internal error. Please save this page and send\n    it to ";
    #line 321 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " with details of what you were doing at\n    the time this message appeared.\n  </p>\n  <script type=\"text/javascript\"> <!--\n    document.write(\"<p>URL: \" + \n                    document.location.href.replace(/&/g,\"&amp;\")\n                                          .replace(/</g,\"&lt;\")\n                                          .replace(/>/g,\"&gt;\") + \"</p>\");\n  // -->\n  </script>\n</tt>\n\n<table cellpadding=\"20\">\n  <tr>\n    <td bgcolor=\"#ff0000\">\n      <font size=\"+2\">";
    #line 337 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$filter($output);
    };
    
    $output .=  "\n      </font>\n    </td>\n  </tr>\n</table>\n";
    #line 350 "template/en/custom/global/code-error.html.tmpl"
    if ($stash->get('variables')) {
    $output .=  "\n  <pre>\nVariables:";
    #line 348 "template/en/custom/global/code-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['variables', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'key'} = $value;
    $output .=  "\n    ";
    #line 347 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('key');
        
        &$filter($output);
    };
    
    $output .=  ": ";
    #line 347 "template/en/custom/global/code-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['variables', 0, $stash->get('key'), 0]);
        
        &$filter($output);
    };
    ;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n  </pre>";
    }
    
    $output .=  "\n";
    #line 352 "template/en/custom/global/code-error.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
