#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'admin/flag-type/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    #line 22 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 24 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Administer Flag Types', 'style' => '
        table#flag_types tr th { text-align: left; }
        .inactive { color: #787878; }
      ' });
    $output .=  "\n\n<p>\n  Flags are markers that identify whether ";
    #line 33 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " or attachment has been granted\n  or denied some status.  Flags appear in the UI as a name and a status symbol\n  (\"+\" for granted, \"-\" for denied, and \"?\" for statuses requested by users).\n</p>\n\n<p>\n  For example, you might define a \"review\" status for users to request review\n  for their patches.  When a patch writer requests review, the string \"review?\"\n  will appear in the attachment.  When a patch reviewer reviews the patch,\n  either the string \"review+\" or the string \"review-\" will appear in the patch,\n  depending on whether the patch passed or failed review.\n</p>\n\n<h3>Flag Types for ";
    #line 46 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</h3>\n";
    #line 48 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('display_flag_types', { 'types' => $stash->get('bug_types') });
    $output .=  "\n\n<p>\n  <a href=\"editflagtypes.cgi?action=enter&amp;target_type=bug\">Create Flag Type for ";
    #line 51 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  "</a>\n</p>\n\n<h3>Flag Types for Attachments</h3>\n";
    #line 56 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('display_flag_types', { 'types' => $stash->get('attachment_types') });
    $output .=  "\n\n<p>\n  <a href=\"editflagtypes.cgi?action=enter&amp;target_type=attachment\">Create Flag Type For Attachments</a>\n</p>\n\n<script type=\"text/javascript\">\n  <!--\n  function confirmDelete(id, name, count)\n  {\n    if (count > 0) {\n        var msg = 'There are ' + count + ' flags of type ' + name + '. ' +\n                  'If you delete this type, those flags will also be ' +\n                  'deleted.\\n\\nNote: to deactivate the type instead ' +\n                  'of deleting it, edit it and uncheck its \"is active\" ' +\n                  'flag.\\n\\nDo you really want to delete this flag type?';\n        if (!confirm(msg)) return false;\n    }\n    location.href = \"editflagtypes.cgi?action=delete&id=\" + id;\n    return false; // prevent strict JavaScript warning that this function\n                  // does not always return a value\n  }\n  //-->\n</script>\n";
    #line 81 "template/en/custom/admin/flag-type/list.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'display_flag_types' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  <table id=\"flag_types\" cellspacing=\"0\" cellpadding=\"4\" border=\"1\">\n\n    <tr>\n      <th>Edit name ...</th>\n      <th>Description</th>\n      <th>Actions</th>\n    </tr>\n";
        #line 106 "template/en/custom/admin/flag-type/list.html.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('types');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'type'} = $value;
        $output .=  "\n\n      <tr class=\"";
        #line 95 "template/en/custom/admin/flag-type/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_active', 0])) {
        $output .=  "active";
        }
        else {
        $output .=  "inactive";
        }
        
        $output .=  "\">\n        <td><a href=\"editflagtypes.cgi?action=edit&amp;id=";
        #line 96 "template/en/custom/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">";
        #line 96 "template/en/custom/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('no_break')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'name', 0]);
            
            &$filter($output);
        };
        
            
            &$filter($output);
        };
        
        $output .=  "</a></td>\n        <td>";
        #line 97 "template/en/custom/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$filter($output);
        };
        
        $output .=  "</td>\n        <td>\n          <a href=\"editflagtypes.cgi?action=copy&amp;id=";
        #line 99 "template/en/custom/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">Copy</a>\n          | <a href=\"editflagtypes.cgi?action=confirmdelete&amp;id=";
        #line 100 "template/en/custom/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\"\n               onclick=\"return confirmDelete(";
        #line 101 "template/en/custom/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  ", '";
        #line 101 "template/en/custom/admin/flag-type/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('js')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'name', 0]);
            
            &$filter($output);
        };
        
            
            &$filter($output);
        };
        
        $output .=  "',";
        #line 102 "template/en/custom/admin/flag-type/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'flag_count', 0]);
        $output .=  ");\">Delete</a>\n        </td>\n      </tr>\n";;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        $output .=  "\n\n  </table>";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
