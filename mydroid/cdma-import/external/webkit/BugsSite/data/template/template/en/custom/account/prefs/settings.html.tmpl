#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'account/prefs/settings.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 28 "template/en/custom/account/prefs/settings.html.tmpl"
    $output .=  $context->process('global/setting-descs.none.tmpl');
    $output .=  "\n";
    #line 61 "template/en/custom/account/prefs/settings.html.tmpl"
    if ($stash->get(['settings', 0, 'size', 0])) {
    $output .=  "\n  <table border=\"0\" cellpadding=\"8\">";
    #line 58 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('setting_names');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'name'} = $value;
    #line 57 "template/en/custom/account/prefs/settings.html.tmpl"
    if ($stash->get(['settings', 0, $stash->get('name'), 0, 'is_enabled', 0])) {
    #line 34 "template/en/custom/account/prefs/settings.html.tmpl"
    $stash->set('default_name', $stash->get('name')  . '-isdefault');
    #line 35 "template/en/custom/account/prefs/settings.html.tmpl"
    $stash->set('default_val', $stash->get(['settings', 0, $stash->get('name'), 0, 'default_value', 0]));
    $output .=  "\n            <tr>\n              <td align=\"right\">";
    #line 38 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['setting_descs', 0, $stash->get('name'), 0]) || $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "\n              </td>\n              <td>\n                <select name=\"";
    #line 41 "template/en/custom/account/prefs/settings.html.tmpl"
    $output .=  $stash->get('name');
    $output .=  "\" id=\"";
    #line 41 "template/en/custom/account/prefs/settings.html.tmpl"
    $output .=  $stash->get('name');
    $output .=  "\">\n                  <option value=\"";
    #line 42 "template/en/custom/account/prefs/settings.html.tmpl"
    $output .=  $stash->get('default_name');
    $output .=  "\"";
    #line 43 "template/en/custom/account/prefs/settings.html.tmpl"
    if ($stash->get(['settings', 0, $stash->get('name'), 0, 'is_default', 0])) {
    $output .=  ' selected="selected"';
    }
    
    $output .=  ">\n                    Site Default (";
    #line 44 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['setting_descs', 0, $stash->get('default_val'), 0]) || $stash->get('default_val');
        
        &$filter($output);
    };
    
    $output .=  ")\n                  </option>";
    #line 53 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['settings', 0, $stash->get('name'), 0, 'legal_values', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'x'} = $value;
    $output .=  "\n                      <option value=\"";
    #line 47 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('x');
        
        &$filter($output);
    };
    
    $output .=  "\"";
    #line 48 "template/en/custom/account/prefs/settings.html.tmpl"
    if ($stash->get('x') eq $stash->get(['settings', 0, $stash->get('name'), 0, 'value', 0]) && ! $stash->get(['settings', 0, $stash->get('name'), 0, 'is_default', 0])) {
    $output .=  ' selected="selected"';
    }
    
    $output .=  ">";
    #line 51 "template/en/custom/account/prefs/settings.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['setting_descs', 0, $stash->get('x'), 0]) || $stash->get('x');
        
        &$filter($output);
    };
    
    $output .=  "\n                      </option>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n                </select>\n              </td>\n            </tr>";
    }
    ;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n  </table>";
    }
    
    $output .=  "\n<br>\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
