#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'bug/votes/delete-all.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 26 "template/en/custom/bug/votes/delete-all.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 28 "template/en/custom/bug/votes/delete-all.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Remove your votes?' });
    $output .=  "\n\n<p>\n  You are about to remove all of your ";
    #line 33 "template/en/custom/bug/votes/delete-all.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " votes. Are you sure you wish to\n  remove your vote from every ";
    #line 34 "template/en/custom/bug/votes/delete-all.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " you've voted on?\n</p>\n\n<form action=\"votes.cgi\" method=\"post\">\n    <input type=\"hidden\" name=\"action\" value=\"vote\">\n  <p>\n    <input type=\"radio\" name=\"delete_all_votes\" value=\"1\">\n    Yes, delete all my votes\n  </p>\n  <p>\n    <input type=\"radio\" name=\"delete_all_votes\" value=\"0\" checked=\"checked\">\n    No, go back and review my votes\n  </p>\n  <p>\n    <input type=\"submit\" value=\"Submit\">\n  </p>\n</form>\n";
    #line 52 "template/en/custom/bug/votes/delete-all.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
