#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'bug/process/bugmail.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 39 "template/en/custom/bug/process/bugmail.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 41 "template/en/custom/bug/process/bugmail.html.tmpl"
    $stash->set('mail', $stash->get(['SendBugMail', [ $stash->get('mailing_bugid'), $stash->get('mailrecipients') ]]));
    $output .=  "\n";
    #line 43 "template/en/custom/bug/process/bugmail.html.tmpl"
    $output .=  $context->process('emails', { 'description' => 'Email sent to', 'names' => $stash->get(['mail', 0, 'sent', 0]) });
    $output .=  "\n<br>";
    #line 48 "template/en/custom/bug/process/bugmail.html.tmpl"
    $output .=  $context->process('emails', { 'description' => 'Excluding', 'names' => $stash->get(['mail', 0, 'excluded', 0]) });
    $output .=  "\n<br>\n<center>\n  If you wish to tweak the kinds of mail ";
    #line 54 "template/en/custom/bug/process/bugmail.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " sends you, you can\n  <a href=\"userprefs.cgi?tab=email\">change your preferences</a>.\n</center>\n\n\n";
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'emails' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  <b>";
        #line 64 "template/en/custom/bug/process/bugmail.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('description');
            
            &$filter($output);
        };
        
        $output .=  ":</b>";
        #line 71 "template/en/custom/bug/process/bugmail.html.tmpl"
        if ($stash->get(['names', 0, 'size', 0]) > 0) {
        $output .=  "\n    ";
        #line 68 "template/en/custom/bug/process/bugmail.html.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('names');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'name'} = $value;
        #line 67 "template/en/custom/bug/process/bugmail.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('name');
            
            &$filter($output);
        };
        
        #line 67 "template/en/custom/bug/process/bugmail.html.tmpl"
        if (!($stash->get(['loop', 0, 'last', 0]))) {
        $output .=  ', ';
        }
        ;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        }
        else {
        $output .=  "\n    no one";
        }
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
