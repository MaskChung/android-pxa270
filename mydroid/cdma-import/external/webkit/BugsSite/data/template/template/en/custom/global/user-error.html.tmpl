#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'global/user-error.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 42 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 44 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
    #line 46 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Error', 1);
    $output .=  "\n";
    #line 1170 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('error_message', do {
        my $output = '';
    #line 1169 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('error') eq 'account_creation_disabled') {
    #line 50 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Account Creation Disabled');
    $output .=  "\n    User account creation has been disabled or restricted.\n    <hr>\n    New accounts must be created by an administrator.\n";
    }
    elsif ($stash->get('error') eq 'account_disabled') {
    #line 56 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Account Disabled');
    #line 57 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('disabled_reason');
        
        &$filter($output);
    };
    
    $output .=  "\n    <hr>\n    If you believe your account should be restored, please\n    send email to ";
    #line 60 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " explaining why.\n";
    }
    elsif ($stash->get('error') eq 'account_exists') {
    #line 63 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Account Already Exists');
    $output .=  "\n    There is already an account with";
    #line 69 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('email')) {
    $output .=  "\n      the login name ";
    #line 66 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('email');
        
        &$filter($output);
    };
    
    $output .=  ".";
    }
    else {
    $output .=  "\n      that login name.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'account_inexistent') {
    #line 72 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Account Does Not Exist');
    $output .=  "\n    There is no ";
    #line 73 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account with that login name.\n";
    }
    elsif ($stash->get('error') eq 'alias_has_comma_or_space') {
    #line 76 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Characters In Alias');
    $output .=  "\n    The alias you entered, <em>";
    #line 77 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$filter($output);
    };
    
    $output .=  "</em>,\n    contains one or more commas or spaces.  Aliases cannot contain\n    commas or spaces because those characters are used to separate\n    aliases from each other in lists.  Please choose another alias\n    that does not contain commas and spaces.\n";
    }
    elsif ($stash->get('error') eq 'alias_in_use') {
    #line 84 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Alias In Use');
    #line 85 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
    #line 85 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_link');
        
        &$filter($output);
    };
    
    $output .=  " has already taken the alias \n    <em>";
    #line 86 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$filter($output);
    };
    
    $output .=  "</em>.  Please choose another one.\n";
    }
    elsif ($stash->get('error') eq 'alias_not_defined') {
    #line 89 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Alias Is Not Defined');
    $output .=  "\n    You did not supply an alias to this ";
    #line 90 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'alias_is_numeric') {
    #line 93 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Alias Is Numeric');
    $output .=  "\n    You tried to give this ";
    #line 94 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " the alias <em>";
    #line 94 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('alias');
        
        &$filter($output);
    };
    
    $output .=  "</em>,\n    but aliases cannot be merely numbers, since they could\n    then be confused with ";
    #line 96 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " IDs.  Please choose another\n    alias containing at least one letter.\n";
    }
    elsif ($stash->get('error') eq 'alias_too_long') {
    #line 100 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Alias Too Long');
    #line 101 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " aliases cannot be longer than 20 characters.\n    Please choose a shorter alias.\n";
    }
    elsif ($stash->get('error') eq 'auth_cant_create_account') {
    #line 105 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Can\'t create accounts');
    $output .=  "\n    This site is using an authentication scheme which does not permit\n    account creation. Please contact an administrator to get a new account\n    created.\n";
    }
    elsif ($stash->get('error') eq 'auth_failure') {
    #line 111 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Authorization Required');
    $output .=  "\n    Sorry,";
    #line 115 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('group')) {
    $output .=  "\n      you aren't a member of the '";
    #line 114 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('group');
        
        &$filter($output);
    };
    
    $output .=  "' group,";
    }
    
    $output .=  "\n";
    #line 124 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('reason')) {
    #line 118 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('group')) {
    $output .=  " and ";
    }
    
    #line 123 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('reason') eq 'cant_bless') {
    $output .=  "\n        you don't have permissions to put people in or out of any group,";
    }
    elsif ($stash->get('reason') eq 'not_visible') {
    $output .=  "\n        there are visibility restrictions on certain user groups,";
    }
    
    }
    
    $output .=  "\n";
    #line 126 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('group') || $stash->get('reason')) {
    $output .=  " and so ";
    }
    
    $output .=  " you are not authorized to";
    #line 143 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('action') eq 'access') {
    $output .=  "\n      access";
    }
    elsif ($stash->get('action') eq 'add') {
    $output .=  "\n      add new";
    }
    elsif ($stash->get('action') eq 'modify') {
    $output .=  "\n      modify";
    }
    elsif ($stash->get('action') eq 'delete') {
    $output .=  "\n      delete";
    }
    elsif ($stash->get('action') eq 'edit') {
    $output .=  "\n      add, modify or delete";
    }
    elsif ($stash->get('action') eq 'run') {
    $output .=  "\n      run";
    }
    elsif ($stash->get('action') eq 'schedule') {
    $output .=  "\n      schedule";
    }
    elsif ($stash->get('action') eq 'use') {
    $output .=  "\n      use";
    }
    
    $output .=  "\n";
    #line 181 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('object') eq 'attachment') {
    $output .=  "\n      this attachment";
    }
    elsif ($stash->get('object') eq 'charts') {
    $output .=  "\n      the \"New Charts\" feature";
    }
    elsif ($stash->get('object') eq 'classifications') {
    $output .=  "\n      classifications";
    }
    elsif ($stash->get('object') eq 'components') {
    $output .=  "\n      components";
    }
    elsif ($stash->get('object') eq 'flagtypes') {
    $output .=  "\n      flag types";
    }
    elsif ($stash->get('object') eq 'groups') {
    $output .=  "\n      groups";
    }
    elsif ($stash->get('object') eq 'keywords') {
    $output .=  "\n      keywords";
    }
    elsif ($stash->get('object') eq 'milestones') {
    $output .=  "\n      milestones";
    }
    elsif ($stash->get('object') eq 'multiple_bugs') {
    $output .=  "\n      multiple ";
    #line 162 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " at once";
    }
    elsif ($stash->get('object') eq 'parameters') {
    $output .=  "\n      parameters";
    }
    elsif ($stash->get('object') eq 'products') {
    $output .=  "\n      products";
    }
    elsif ($stash->get('object') eq 'quips') {
    $output .=  "\n      quips";
    }
    elsif ($stash->get('object') eq 'reports') {
    $output .=  "\n      whine reports";
    }
    elsif ($stash->get('object') eq 'sanity_check') {
    $output .=  "\n      a sanity check";
    }
    elsif ($stash->get('object') eq 'timetracking_summaries') {
    $output .=  "\n      time-tracking summary reports";
    }
    elsif ($stash->get('object') eq 'user') {
    $output .=  "\n      the user you specified";
    }
    elsif ($stash->get('object') eq 'users') {
    $output .=  "\n      users";
    }
    elsif ($stash->get('object') eq 'versions') {
    $output .=  "\n      versions";
    }
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'attachment_removed') {
    #line 184 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Attachment Removed');
    $output .=  "\n    The attachment you are attempting to access has been removed.\n";
    }
    elsif ($stash->get('error') eq 'bug_access_denied') {
    #line 188 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Access Denied');
    $output .=  "\n    You are not authorized to access ";
    #line 189 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " #";
    #line 189 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'bug_access_query') {
    #line 192 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Access Denied');
    $output .=  "\n    You are not authorized to access ";
    #line 193 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " #";
    #line 193 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  ".\n    To see this ";
    #line 194 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", you must\n    first <a href=\"show_bug.cgi?id=";
    #line 196 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  "&amp;GoAheadAndLogIn=1\">log\n    in to an account</a> with the appropriate permissions.\n";
    }
    elsif ($stash->get('error') eq 'buglist_parameters_required') {
    #line 200 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Parameters Required');
    $output .=  "\n    You may not search, or create saved searches, without any search terms.\n";
    }
    elsif ($stash->get('error') eq 'bugs_not_changed') {
    #line 204 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    #line 204 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " Not Changed";
        $output;
    });
    
    $output .=  "\n    You do not seem to have made any changes in the selected ";
    #line 205 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ",\n    so there is nothing to Commit.\n";
    }
    elsif ($stash->get('error') eq 'chart_too_large') {
    #line 209 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Chart Too Large');
    $output .=  "\n    Sorry, but 2000 x 2000 is the maximum size for a chart.\n";
    }
    elsif ($stash->get('error') eq 'comment_required') {
    #line 213 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Comment Required');
    $output .=  "\n    You have to specify a <b>comment</b> on this change.\n    Please explain your change.\n";
    }
    elsif ($stash->get('error') eq 'comment_too_long') {
    #line 218 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Comment Too Long');
    $output .=  "\n    Comments cannot be longer than 65,535 characters.\n";
    }
    elsif ($stash->get('error') eq 'auth_classification_not_enabled') {
    #line 222 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Not Enabled');
    $output .=  "\n    Sorry, classification is not enabled.\n";
    }
    elsif ($stash->get('error') eq 'classification_not_specified') {
    #line 226 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'You Must Supply A Classification Name');
    $output .=  "\n    You must enter a classification name.\n";
    }
    elsif ($stash->get('error') eq 'classification_already_exists') {
    #line 230 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Already Exists');
    $output .=  "\n    A classification with the name '";
    #line 231 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' already exists.\n";
    }
    elsif ($stash->get('error') eq 'classification_doesnt_exist') {
    #line 234 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Does Not Exist');
    $output .=  "\n    The classification '";
    #line 235 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'classification_doesnt_exist_for_product') {
    #line 238 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Classification Does Not Exist For Product');
    $output .=  "\n    The classification '";
    #line 239 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('classification');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist\n    for product '";
    #line 240 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'classification_not_deletable') {
    #line 243 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Default Classification Can Not Be Deleted');
    $output .=  "\n    You can not delete the default classification\n";
    }
    elsif ($stash->get('error') eq 'classification_has_products') {
    $output .=  "\n     Sorry, there are products for this classification. You\n     must reassign those products to another classification before you\n     can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'cant_delete_default_classification') {
    $output .=  "\n     Sorry, but you can not delete the default classification,\n     '";
    #line 253 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'component_already_exists') {
    #line 256 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Already Exists');
    $output .=  "\n    A component with the name '";
    #line 257 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' already exists.\n";
    }
    elsif ($stash->get('error') eq 'component_blank_description') {
    #line 260 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Description Not Allowed');
    $output .=  "\n    You must enter a non-blank description for component '";
    #line 261 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n     ";
    }
    elsif ($stash->get('error') eq 'component_blank_name') {
    #line 264 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Name Not Allowed');
    $output .=  "\n    You must enter a name for this new component.\n";
    }
    elsif ($stash->get('error') eq 'component_has_bugs') {
    #line 268 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Component has ";
    #line 268 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
    $output .=  "\n    There are ";
    #line 269 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$filter($output);
    };
    
    $output .=  " ";
    #line 269 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " entered for this component!\n    You must reassign those ";
    #line 270 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another component before you\n    can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'component_must_have_a_name') {
    #line 274 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Name Not Allowed');
    $output .=  "\n    You cannot delete the component name for component '";
    #line 275 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n     ";
    }
    elsif ($stash->get('error') eq 'component_cant_del_description') {
    #line 278 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Component Description Not Allowed');
    $output .=  "\n    You cannot delete the component description for \n    component '";
    #line 280 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'component_name_too_long') {
    #line 283 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Name Is Too Long');
    $output .=  "\n    The name of a component is limited to 64 characters. \n    '";
    #line 285 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' is too long (";
    #line 285 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'size', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'component_need_initialowner') {
    #line 288 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Requires Default Assignee');
    $output .=  "\n    You must enter a default assignee for component '";
    #line 289 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'component_need_valid_initialowner') {
    #line 292 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Requires A Valid Default Assignee');
    $output .=  "\n    You must use an existing ";
    #line 293 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account as the default assignee for\n    component '";
    #line 294 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'component_need_valid_initialqacontact') {
    #line 297 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Requires A Valid Default QA Contact');
    $output .=  "\n    You must use an existing ";
    #line 298 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account as default QA contact for\n    component '";
    #line 299 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'.\n     ";
    }
    elsif ($stash->get('error') eq 'product_not_specified') {
    #line 302 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Product Specified');
    $output .=  "\n    No product specified when trying to edit components, milestones or\n    versions.\n";
    }
    elsif ($stash->get('error') eq 'component_not_specified') {
    #line 307 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Component Specified');
    $output .=  "\n    No component specified when trying to edit components.\n";
    }
    elsif ($stash->get('error') eq 'component_not_valid') {
    #line 311 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Component Does Not Exist');
    $output .=  "\n    The component '";
    #line 312 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' for product \n    '";
    #line 313 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'product_doesnt_exist') {
    #line 316 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Product Does Not Exist');
    $output .=  "\n    The product '";
    #line 317 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'dependency_loop_multi') {
    #line 320 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Dependency Loop Detected');
    $output .=  "\n    The following ";
    #line 321 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "(s) would appear on both the \"depends on\"\n    and \"blocks\" parts of the dependency tree if these changes\n    are committed: ";
    #line 323 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('both');
        
        &$filter($output);
    };
    
    $output .=  ". This would create a circular\n    dependency, which is not allowed.\n";
    }
    elsif ($stash->get('error') eq 'dependency_loop_single') {
    #line 327 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Dependency Loop Detected');
    $output .=  "\n    You can't make ";
    #line 328 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " blocked or dependent on itself.\n";
    }
    elsif ($stash->get('error') eq 'description_required') {
    #line 331 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Description Required');
    $output .=  "\n    You must provide a description of the ";
    #line 332 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'dupe_entry_found') {
    #line 335 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Already marked as duplicate');
    $output .=  "\n    This ";
    #line 336 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has already been marked as a duplicate\n    of ";
    #line 337 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 337 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dupe_of');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'dupe_not_allowed') {
    #line 0 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', ("Cannot mark " . $stash->get(['terms', 0, 'bugs', 0]) . " as duplicates"));
    $output .=  "\n    You cannot mark ";
    #line 341 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " as duplicates when\n    changing several ";
    #line 342 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " at once.\n";
    }
    elsif ($stash->get('error') eq 'dupe_loop_detected') {
    #line 345 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Loop detected among duplicates');
    $output .=  "\n    You cannot mark ";
    #line 346 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 346 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  " as\n    a duplicate of";
    #line 353 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('dupe_of') eq $stash->get('bug_id')) {
    $output .=  "\n      itself";
    }
    else {
    $output .=  "\n      ";
    #line 351 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 351 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dupe_of');
        
        &$filter($output);
    };
    
    $output .=  ", because it\n      would create a duplicate loop";
    }
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'email_change_in_progress') {
    #line 356 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Email Change Already In Progress');
    $output .=  "\n    Email change already in progress; please check your email.\n";
    }
    elsif ($stash->get('error') eq 'email_confirmation_failed') {
    #line 360 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Email Address Confirmation Failed');
    $output .=  "\n    Email address confirmation failed.\n";
    }
    elsif ($stash->get('error') eq 'empty_group_description') {
    #line 364 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'The group description can not be empty');
    $output .=  "\n    You must enter a description for the group.\n";
    }
    elsif ($stash->get('error') eq 'empty_group_name') {
    #line 368 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'The group name can not be empty');
    $output .=  "\n    You must enter a name for the group.\n  ";
    }
    elsif ($stash->get('error') eq 'entry_access_denied') {
    #line 372 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Permission Denied');
    $output .=  "\n    Sorry, either the product <em>";
    #line 373 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em>\n    does not exist or you aren't authorized to\n    enter ";
    #line 375 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.\n";
    }
    elsif ($stash->get('error') eq 'fieldname_invalid') {
    #line 378 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Field Does Not Exist');
    $output .=  "\n    The field '";
    #line 379 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist or \n    cannot be edited with this interface.\n";
    }
    elsif ($stash->get('error') eq 'fieldname_not_specified') {
    #line 383 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Field Name Not Specified');
    $output .=  "\n    No field name specified when trying to edit field values.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_already_exists') {
    #line 387 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Already Exists');
    $output .=  "\n    The value '";
    #line 388 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "' already exists for the\n    '";
    #line 389 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  "' field.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_doesnt_exist') {
    #line 392 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Field Value Does Not Exist');
    $output .=  "\n    The value '";
    #line 393 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist for\n    the '";
    #line 394 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  "' field.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_name_too_long') {
    #line 397 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Is Too Long');
    $output .=  "\n    The value of a field is limited to 60 characters.\n    '";
    #line 399 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "' is too long (";
    #line 399 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['value', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_not_specified') {
    #line 402 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Field Value Not Specified');
    $output .=  "\n    No field value specified when trying to edit a field value.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_sortkey_invalid') {
    #line 406 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Field Value Sortkey');
    $output .=  "\n    The sortkey '";
    #line 407 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$filter($output);
    };
    
    $output .=  "' for the '";
    #line 407 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "'\n    field is not a valid (positive) number.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_still_has_bugs') {
    #line 411 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'You Cannot Delete This Field Value');
    $output .=  "\n    You cannot delete the value '";
    #line 412 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "' from the \n    '";
    #line 413 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('field');
        
        &$filter($output);
    };
    
    $output .=  "' field, because there are still ";
    #line 414 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('count');
        
        &$filter($output);
    };
    
    #line 414 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " using it.\n";
    }
    elsif ($stash->get('error') eq 'fieldvalue_undefined') {
    #line 417 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Undefined Value Not Allowed');
    $output .=  "\n    You must specify a value.\n";
    }
    elsif ($stash->get('error') eq 'file_not_specified') {
    #line 421 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No File Specified');
    $output .=  "\n    You did not specify a file to attach.\n";
    }
    elsif ($stash->get('error') eq 'file_too_large') {
    #line 425 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'File Too Large');
    $output .=  "\n    The file you are trying to attach is ";
    #line 426 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filesize');
        
        &$filter($output);
    };
    
    $output .=  " \n    kilobytes (KB) in size. Non-patch attachments cannot be more than";
    #line 428 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxattachmentsize' ]]);
    $output .=  " KB. <br>\n    We recommend that you store your attachment elsewhere on the web,\n    and then insert a link to it in a comment, or in the URL field \n    for this ";
    #line 431 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ". Alternately, if your attachment is an image,\n    you could convert it to a compressible format like JPG or PNG and try\n    again.\n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_unauthorized') {
    #line 436 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Requestee Not Authorized');
    $output .=  "\n\n    You asked ";
    #line 438 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['requestee', 0, 'identity', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\n    for <code>";
    #line 439 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</code> on ";
    #line 439 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 440 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    #line 441 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('attach_id')) {
    $output .=  ", attachment ";
    #line 441 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    }
    
    $output .=  ", \n    but that ";
    #line 442 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been restricted to users in certain groups, \n    and the user you asked isn't in all the groups to which \n    the ";
    #line 444 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " has been restricted.\n    Please choose someone else to ask, or make the ";
    #line 445 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " accessible to users\n    on its CC: list and add that user to the list.\n";
    }
    elsif ($stash->get('error') eq 'flag_requestee_unauthorized_attachment') {
    #line 449 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Requestee Not Authorized');
    $output .=  "\n\n    You asked ";
    #line 451 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['requestee', 0, 'identity', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\n    for <code>";
    #line 452 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag_type', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</code> on \n    ";
    #line 453 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " ";
    #line 453 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  ",\n    attachment ";
    #line 454 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  ", but that attachment is restricted \n    to users\n    in the ";
    #line 456 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'insidergroup' ]]);
        
        &$filter($output);
    };
    
    $output .=  " group, and the user\n    you asked isn't in that group.  Please choose someone else to ask,\n    or ask an administrator to add the user to the group.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_cc_list_invalid') {
    #line 461 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type CC List Invalid');
    $output .=  "\n    The CC list ";
    #line 462 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('cc_list');
        
        &$filter($output);
    };
    
    $output .=  " must be less than 200 characters long.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_description_invalid') {
    #line 465 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Description Invalid');
    $output .=  "\n    The description must be less than 32K.\n";
    }
    elsif ($stash->get('error') eq 'flag_type_name_invalid') {
    #line 469 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Name Invalid');
    $output .=  "\n    The name <em>";
    #line 470 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> must be 1-50 characters long\n    and must not contain any spaces or commas.\n";
    }
    elsif ($stash->get('error') eq 'flag_update_denied') {
    #line 474 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Modification Denied');
    $output .=  "\n    You tried to ";
    #line 476 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('status') eq '+') {
    $output .=  " grant ";
    }
    elsif ($stash->get('status') eq '-') {
    $output .=  " deny";
    }
    elsif ($stash->get('status') eq 'X') {
    $output .=  " clear ";
    }
    else {
    $output .=  " request ";
    }
    
    $output .=  "\n    <code>";
    #line 477 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    #line 478 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('status') eq 'X') {
    #line 478 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('old_status');
        
        &$filter($output);
    };
    
    }
    
    $output .=  "</code>.\n\n    Only a sufficiently empowered user can make this change.\n";
    }
    elsif ($stash->get('error') eq 'format_not_found') {
    #line 483 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Format Not Found');
    $output .=  "\n    The requested format <em>";
    #line 484 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$filter($output);
    };
    
    $output .=  "</em> does not exist with\n    a content type of <em>";
    #line 485 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('ctype');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n    ";
    }
    elsif ($stash->get('error') eq 'flag_type_sortkey_invalid') {
    #line 488 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Flag Type Sort Key Invalid');
    $output .=  "\n    The sort key must be an integer between 0 and 32767 inclusive.\n    It cannot be <em>";
    #line 490 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'group_exists') {
    #line 493 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'The group already exists');
    $output .=  "\n    The group ";
    #line 494 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  " already exists.\n";
    }
    elsif ($stash->get('error') eq 'group_not_specified') {
    #line 497 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Group not specified');
    $output .=  "\n    No group was specified.\n";
    }
    elsif ($stash->get('error') eq 'system_group_not_deletable') {
    #line 501 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'System Groups not deletable');
    $output .=  "\n    <em>";
    #line 502 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</em> is a system group.\n    This group cannot be deleted.\n";
    }
    elsif ($stash->get('error') eq 'group_unknown') {
    #line 506 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Group');
    $output .=  "\n    The group ";
    #line 507 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  " does not exist. Please specify\n    a valid group name. Create it first if necessary!\n";
    }
    elsif ($stash->get('error') eq 'illegal_at_least_x_votes') {
    #line 511 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The <em>At least ___ votes</em> field must be a simple number. \n    You entered <tt>";
    #line 513 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "</tt>, which isn't.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_edit') {
    #line 516 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Unauthorised Action');
    $output .=  "\n    You are not authorised to edit attachment ";
    #line 517 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_edit_bug') {
    #line 520 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Unauthorised Action');
    $output .=  "\n    You are not authorised to edit attachments on ";
    #line 521 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " \n    ";
    #line 522 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  ".\n         ";
    }
    elsif ($stash->get('error') eq 'illegal_attachment_is_patch') {
    #line 525 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The only legal values for the <em>Attachment is patch</em> field are\n    0 and 1.\n         ";
    }
    elsif ($stash->get('error') eq 'illegal_change') {
    #line 530 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Not allowed');
    $output .=  "\n    You tried to change the \n    <strong>";
    #line 532 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "</strong> field \n    from <em>";
    #line 533 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('oldvalue');
        
        &$filter($output);
    };
    
    $output .=  "</em> to \n    <em>";
    #line 534 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('newvalue');
        
        &$filter($output);
    };
    
    $output .=  "</em>, but only";
    #line 539 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('privs') < 3) {
    $output .=  "\n      the assignee";
    #line 537 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('privs') < 2) {
    $output .=  " or reporter ";
    }
    
    $output .=  "\n      of the ";
    #line 538 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", or";
    }
    
    $output .=  "\n    a sufficiently empowered user may change that field.\n";
    }
    elsif ($stash->get('error') eq 'illegal_changed_in_last_x_days') {
    #line 543 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The <em>Changed in last ___ days</em> field must be a simple number. \n    You entered <tt>";
    #line 545 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$filter($output);
    };
    
    $output .=  "</tt>, which isn't.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_date') {
    #line 548 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Date');
    $output .=  "\n    '<tt>";
    #line 549 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('date');
        
        &$filter($output);
    };
    
    $output .=  "</tt>' is not a legal date.";
    #line 552 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('format')) {
    $output .=  "\n      Please use the format '<tt>";
    #line 551 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$filter($output);
    };
    
    $output .=  "</tt>'.";
    }
    
    $output .=  "\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_email_address') {
    #line 555 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Email Address');
    $output .=  "\n    The e-mail address you entered (<b>";
    #line 556 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('addr');
        
        &$filter($output);
    };
    
    $output .=  "</b>) \n    didn't pass our syntax checking for a legal email address. \n    ";
    #line 558 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'emailregexpdesc' ]]);
    $output .=  "\n    It must also not contain any of these special characters:\n    <tt>\\ ( ) &amp; &lt; &gt; , ; : &quot; [ ]</tt>, or any whitespace.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_frequency') {
    #line 563 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Too Frequent');
    $output .=  "\n    Unless you are an administrator, you may not create series which are \n    run more often than once every ";
    #line 565 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('minimum');
        
        &$filter($output);
    };
    
    $output .=  " days.\n    ";
    }
    elsif ($stash->get('error') eq 'illegal_group_control_combination') {
    #line 568 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Group Control Combination Is Illegal');
    $output .=  "\n    Your group control combination for group &quot;";
    #line 570 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('groupname');
        
        &$filter($output);
    };
    
    $output .=  "&quot; is illegal.\n";
    }
    elsif ($stash->get('error') eq 'illegal_is_obsolete') {
    #line 573 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    The only legal values for the <em>Attachment is obsolete</em> field are\n    0 and 1.\n";
    }
    elsif ($stash->get('error') eq 'illegal_query_name') {
    #line 578 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Search Name');
    $output .=  "\n    The name of your search cannot contain any of the following characters: \n    &lt;, &gt;, &amp;.\n";
    }
    elsif ($stash->get('error') eq 'illegal_series_creation') {
    $output .=  "\n    You are not authorised to create series.\n        ";
    }
    elsif ($stash->get('error') eq 'illegal_series_edit') {
    $output .=  "\n    You are not authorised to edit this series. To do this, you must either\n    be its creator, or an administrator.\n        ";
    }
    elsif ($stash->get('error') eq 'insufficient_data') {
    #line 590 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Insufficient Data');
    $output .=  "\n    None of the series you selected have any data associated with them, so a\n    chart cannot be plotted.\n        ";
    }
    elsif ($stash->get('error') eq 'insufficient_data_points') {
    $output .=  "\n    We don't have enough data points to make a graph (yet).\n        ";
    }
    elsif ($stash->get('error') eq 'invalid_attach_id') {
    #line 598 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Attachment ID');
    $output .=  "\n    The attachment id ";
    #line 599 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  " is invalid.\n";
    }
    elsif ($stash->get('error') eq 'invalid_bug_id_non_existent') {
    #line 602 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Invalid ";
    #line 602 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ID";
        $output;
    });
    
    #line 603 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " #";
    #line 603 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  " does not exist.\n    ";
    }
    elsif ($stash->get('error') eq 'invalid_bug_id_or_alias') {
    #line 606 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Invalid ";
    #line 606 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ID";
        $output;
    });
    
    #line 618 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('bug_id')) {
    $output .=  "\n      '";
    #line 608 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  "' is not a valid ";
    #line 608 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " number";
    #line 611 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['Param', [ 'usebugaliases' ]])) {
    $output .=  "\n        nor an alias to ";
    #line 610 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    }
    
    $output .=  ".";
    }
    else {
    #line 616 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('field')) {
    $output .=  "\n        The '";
    #line 614 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "' field\n        cannot be empty.";
    }
    
    $output .=  "\n      You must enter a valid ";
    #line 617 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " number!";
    }
    
    $output .=  "\n    <noscript>\n      If you are trying to use QuickSearch, you need to enable\n      JavaScript in your browser.\n    </noscript>\n";
    }
    elsif ($stash->get('error') eq 'invalid_changedsince') {
    #line 625 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid \'Changed Since\'');
    $output .=  "\n    The 'changed since' value, '";
    #line 626 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('changedsince');
        
        &$filter($output);
    };
    
    $output .=  "', must be an\n    integer >= 0.\n";
    }
    elsif ($stash->get('error') eq 'invalid_content_type') {
    #line 630 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Content-Type');
    $output .=  "\n    The content type <em>";
    #line 631 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttype');
        
        &$filter($output);
    };
    
    $output .=  "</em> is invalid.\n    Valid types must be of the form <em>foo/bar</em> where <em>foo</em>\n    is either <em>application, audio, image, message, model, multipart,\n    text,</em> or <em>video</em>.\n    ";
    }
    elsif ($stash->get('error') eq 'invalid_context') {
    #line 637 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Context');
    $output .=  "\n    The context ";
    #line 638 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('context');
        
        &$filter($output);
    };
    
    $output .=  " is invalid (must be a number,\n    \"file\" or \"patch\").\n";
    }
    elsif ($stash->get('error') eq 'invalid_field_name') {
    #line 642 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Field Name');
    $output .=  "\n    The field \"";
    #line 643 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "\" is invalid.\n";
    }
    elsif ($stash->get('error') eq 'invalid_format') {
    #line 646 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Format');
    $output .=  "\n    The format \"";
    #line 647 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('format');
        
        &$filter($output);
    };
    
    $output .=  "\" is invalid (must be one of";
    #line 650 "template/en/custom/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('formats');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'my_format'} = $value;
    $output .=  "\n      \"";
    #line 649 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('my_format');
        
        &$filter($output);
    };
    
    $output .=  "\"";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    ).\n";
    }
    elsif ($stash->get('error') eq 'invalid_group_ID') {
    #line 654 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid group ID');
    $output .=  "\n    The group you specified doesn't exist.\n";
    }
    elsif ($stash->get('error') eq 'invalid_group_name') {
    #line 658 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid group name');
    $output .=  "\n    The group you specified, ";
    #line 659 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  ", is not valid here.\n";
    }
    elsif ($stash->get('error') eq 'invalid_maxrows') {
    #line 662 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Max Rows');
    $output .=  "\n    The maximum number of rows, '";
    #line 663 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('maxrows');
        
        &$filter($output);
    };
    
    $output .=  "', must be\n    a positive integer.\n";
    }
    elsif ($stash->get('error') eq 'invalid_product_name') {
    #line 667 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Product Name');
    $output .=  "\n    The product name '";
    #line 668 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "' is invalid or does not exist.\n";
    }
    elsif ($stash->get('error') eq 'invalid_regexp') {
    #line 671 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid regular expression');
    $output .=  "\n    The regular expression you entered is invalid.\n";
    }
    elsif ($stash->get('error') eq 'invalid_username') {
    #line 675 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Username');
    $output .=  "\n    The name <tt>";
    #line 676 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "</tt> is not a valid username.  \n    Either you misspelled it, or the person has not\n    registered for a ";
    #line 678 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " account.\n";
    }
    elsif ($stash->get('error') eq 'invalid_username_or_password') {
    #line 681 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Username Or Password');
    $output .=  "\n    The username or password you entered is not valid.\n";
    }
    elsif ($stash->get('error') eq 'keyword_already_exists') {
    #line 685 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Keyword Already Exists');
    $output .=  "\n    A keyword with the name ";
    #line 686 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  " already exists.\n";
    }
    elsif ($stash->get('error') eq 'keyword_blank_description') {
    #line 689 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Keyword Description Not Allowed');
    $output .=  "\n    You must enter a non-blank description for the keyword.\n     ";
    }
    elsif ($stash->get('error') eq 'keyword_blank_name') {
    #line 693 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Keyword Name Not Allowed');
    $output .=  "\n    You must enter a non-blank name for the keyword.\n     ";
    }
    elsif ($stash->get('error') eq 'keyword_invalid_name') {
    #line 697 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Keyword Name');
    $output .=  "\n    You may not use commas or whitespace in a keyword name.\n     ";
    }
    elsif ($stash->get('error') eq 'local_file_too_large') {
    #line 701 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Local File Too Large');
    $output .=  "\n    Local file uploads must not exceed ";
    #line 703 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxlocalattachment' ]]);
    $output .=  " MB in size.\n";
    }
    elsif ($stash->get('error') eq 'login_needed_for_password_change') {
    #line 706 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
    $output .=  "\n    You must enter a login name when requesting to change your password.\n";
    }
    elsif ($stash->get('error') eq 'login_required_for_pronoun') {
    #line 710 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
    $output .=  "\n    You must enter a login name when using your login as a pronoun.\n";
    }
    elsif ($stash->get('error') eq 'milestone_already_exists') {
    #line 714 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Already Exists');
    $output .=  "\n    The milestone '";
    #line 715 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' already exists for product '";
    #line 716 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'milestone_blank_name') {
    #line 719 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Milestone Name Not Allowed');
    $output .=  "\n    You must enter a name for this milestone.\n";
    }
    elsif ($stash->get('error') eq 'milestone_is_default') {
    #line 723 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Default milestone not deletable');
    $output .=  "\n    Sorry, but ";
    #line 724 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  " is the default milestone for\n    product '";
    #line 725 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "', and so it can not be deleted.\n";
    }
    elsif ($stash->get('error') eq 'milestone_name_too_long') {
    #line 728 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Name Is Too Long');
    $output .=  "\n    The name of a milestone is limited to 20 characters. \n    '";
    #line 730 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' is too long (";
    #line 730 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'milestone_not_specified') {
    #line 733 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Milestone Specified');
    $output .=  "\n    No milestone specified when trying to edit milestones.\n";
    }
    elsif ($stash->get('error') eq 'milestone_not_valid') {
    #line 737 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Milestone Does Not Exist');
    $output .=  "\n    The milestone '";
    #line 738 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('milestone');
        
        &$filter($output);
    };
    
    $output .=  "' for product \n    '";
    #line 739 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'milestone_required') {
    #line 742 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Milestone Required');
    $output .=  "\n    You must determine a target milestone for ";
    #line 743 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " \n    ";
    #line 744 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bug_id');
        
        &$filter($output);
    };
    
    $output .=  "\n    if you are going to accept it.  Part of accepting ";
    #line 746 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " is giving an estimate of when it will be fixed.\n";
    }
    elsif ($stash->get('error') eq 'milestone_sortkey_invalid') {
    #line 749 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Invalid Milestone Sortkey');
    $output .=  "\n    The sortkey '";
    #line 750 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('sortkey');
        
        &$filter($output);
    };
    
    $output .=  "' for milestone '";
    #line 751 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' is not in the range -32768 &le; sortkey\n    &le; 32767.\n";
    }
    elsif ($stash->get('error') eq 'misarranged_dates') {
    #line 755 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Misarranged Dates');
    $output .=  "\n    Your start date (";
    #line 756 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('datefrom');
        
        &$filter($output);
    };
    
    $output .=  ") is after \n    your end date (";
    #line 757 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dateto');
        
        &$filter($output);
    };
    
    $output .=  ").\n    ";
    }
    elsif ($stash->get('error') eq 'missing_attachment_description') {
    #line 760 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Attachment Description');
    $output .=  "\n    You must enter a description for the attachment.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_category') {
    #line 764 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Category');
    $output .=  "\n    You did not specify a category for this series.\n";
    }
    elsif ($stash->get('error') eq 'missing_component') {
    #line 768 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Component');
    $output .=  "\n    Sorry, the product <em>";
    #line 769 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em>\n    has to have at least one component in order for you to\n    enter ";
    #line 771 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.<p>";
    #line 778 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['UserInGroup', [ 'editcomponents' ]])) {
    $output .=  "\n      <a href=\"editcomponents.cgi?action=add&amp;product=";
    #line 773 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "\">Create\n      a new component</a>.";
    }
    else {
    $output .=  "\n      Please contact ";
    #line 776 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " and ask them\n      to add a component to this product.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'missing_content_type') {
    #line 781 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Content-Type');
    $output .=  "\n     You asked ";
    #line 782 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " to auto-detect the content type, but\n     your browser did not specify a content type when uploading the file, \n     so you must enter a content type manually.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_content_type_method') {
    #line 787 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Content-Type Determination Method');
    $output .=  "\n    You must choose a method for determining the content type,\n    either <em>auto-detect</em>, <em>select from list</em>, or <em>enter \n    manually</em>.\n        ";
    }
    elsif ($stash->get('error') eq 'missing_cookie') {
    #line 793 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Cookie');
    $output .=  "\n    Sorry, I seem to have lost the cookie that recorded\n    the results of your last search. I'm afraid you will have to start\n    again from the <a href=\"query.cgi\">search page</a>.\n          ";
    }
    elsif ($stash->get('error') eq 'missing_datasets') {
    #line 799 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Datasets Selected');
    $output .=  "\n    You must specify one or more datasets to plot.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_email_type') {
    #line 803 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Your Search Makes No Sense');
    $output .=  "\n    You must specify one or more fields in which to search for\n    <tt>";
    #line 805 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('email');
        
        &$filter($output);
    };
    
    $output .=  "</tt>.\n    ";
    }
    elsif ($stash->get('error') eq 'missing_frequency') {
    #line 808 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Frequency');
    $output .=  "\n    You did not specify a valid frequency for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_name') {
    #line 812 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Name');
    $output .=  "\n    You did not specify a name for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_query') {
    #line 816 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Search');
    $output .=  "\n    The search named <em>";
    #line 817 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('queryname');
        
        &$filter($output);
    };
    
    $output .=  "</em> does not\n    exist.\n        ";
    }
    elsif ($stash->get('error') eq 'must_be_patch') {
    #line 821 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Attachment Must Be Patch');
    $output .=  "\n    Attachment #";
    #line 822 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('attach_id');
        
        &$filter($output);
    };
    
    $output .=  " must be a patch.\n";
    }
    elsif ($stash->get('error') eq 'missing_subcategory') {
    #line 825 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Subcategory');
    $output .=  "\n    You did not specify a subcategory for this series.\n                ";
    }
    elsif ($stash->get('error') eq 'missing_version') {
    #line 829 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Missing Version');
    $output .=  "\n    Sorry, the product <em>";
    #line 830 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em>\n    has to have at least one version in order for you to\n    enter ";
    #line 832 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  " into it.<p>";
    #line 839 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['UserInGroup', [ 'editcomponents' ]])) {
    $output .=  "\n      <a href=\"editversions.cgi?action=add&amp;product=";
    #line 834 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('url_quote')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "\">Create\n      a new version</a>.";
    }
    else {
    $output .=  "\n      Please contact ";
    #line 837 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " and ask them\n      to add a version to this product.";
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'need_component') {
    #line 842 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Required');
    $output .=  "\n    You must specify a component to help determine the new assignee of these ";
    #line 844 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'need_product') {
    #line 847 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Product Required');
    $output .=  "\n    You must specify a product to help determine the new assignee of these ";
    #line 848 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'need_quip') {
    #line 851 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Quip Required');
    $output .=  "\n    Please enter a quip in the text field.\n";
    }
    elsif ($stash->get('error') eq 'new_password_missing') {
    #line 855 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'New Password Missing');
    $output .=  "\n    You must enter a new password.\n";
    }
    elsif ($stash->get('error') eq 'no_axes_defined') {
    #line 859 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Axes Defined');
    $output .=  "\n    You didn't define any axes to plot.\n";
    }
    elsif ($stash->get('error') eq 'no_bugs_chosen') {
    #line 863 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "No ";
    #line 863 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " Chosen";
        $output;
    });
    
    $output .=  "\n    You apparently didn't choose any ";
    #line 864 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to modify.\n";
    }
    elsif ($stash->get('error') eq 'no_component_change_for_multiple_products') {
    #line 867 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Action Not Permitted');
    $output .=  "\n    You cannot change the component for a list of ";
    #line 868 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " covering more than\n    one product.\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats') {
    #line 872 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Cannot Find Duplicate Statistics');
    $output .=  "\n    There are no duplicate statistics for today (";
    #line 873 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('today');
        
        &$filter($output);
    };
    
    $output .=  ") \n    or yesterday.\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_today') {
    #line 877 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Today\'s Dupes File');
    $output .=  "\n    An error occurred opening today's dupes file: ";
    #line 878 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_whenever') {
    #line 881 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Previous Dupes File');
    $output .=  "\n    An error occurred opening ";
    #line 882 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('changedsince');
        
        &$filter($output);
    };
    
    $output .=  " days ago\n    (";
    #line 883 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('whenever');
        
        &$filter($output);
    };
    
    $output .=  ")'s dupes file:";
    #line 884 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_dupe_stats_error_yesterday') {
    #line 887 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Error Reading Yesterday\'s Dupes File');
    $output .=  "\n    There are no duplicate statistics for today (";
    #line 888 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('today');
        
        &$filter($output);
    };
    
    $output .=  "), \n    and an error\n    occurred opening yesterday's dupes file: ";
    #line 890 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_msg');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'no_new_quips') {
    #line 893 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No New Quips');
    $output .=  "\n    This site does not permit the addition of new quips.\n";
    }
    elsif ($stash->get('error') eq 'no_page_specified') {
    #line 897 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Page Specified');
    $output .=  "\n    You did not specify the id of a page to display.\n";
    }
    elsif ($stash->get('error') eq 'no_products') {
    #line 901 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Products');
    $output .=  "\n    Either no products have been defined to enter ";
    #line 902 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " against or you have not\n    been given access to any.\n";
    }
    elsif ($stash->get('error') eq 'no_valid_action') {
    #line 906 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No valid action specified');
    $output .=  "\n    Cannot edit ";
    #line 907 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  ": no valid action was specified.\n";
    }
    elsif ($stash->get('error') eq 'number_not_numeric') {
    #line 910 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Numeric Value Required');
    $output .=  "\n    The value '";
    #line 911 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$filter($output);
    };
    
    $output .=  "' in the \n    <em>";
    #line 912 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "</em> field \n    is not a numeric value.\n";
    }
    elsif ($stash->get('error') eq 'number_too_large') {
    #line 916 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Number Too Large');
    $output .=  "\n    The value '";
    #line 917 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$filter($output);
    };
    
    $output .=  "' in the \n    <em>";
    #line 918 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "</em> field \n    is more than the maximum allowable value of '";
    #line 919 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max_num');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'number_too_small') {
    #line 922 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Number Too Small');
    $output .=  "\n    The value '";
    #line 923 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('num');
        
        &$filter($output);
    };
    
    $output .=  "' \n    in the <em>";
    #line 924 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "</em> field \n    is less than the minimum allowable value of '";
    #line 925 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('min_num');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'old_password_incorrect') {
    #line 928 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Incorrect Old Password');
    $output .=  "\n    You did not enter your old password correctly.\n";
    }
    elsif ($stash->get('error') eq 'old_password_required') {
    #line 932 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Old Password Required');
    $output .=  "\n    You must enter your old password to change your email address.\n";
    }
    elsif ($stash->get('error') eq 'password_change_requests_not_allowed') {
    #line 936 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Password Change Requests Not Allowed');
    $output .=  "\n    The system is not configured to allow password change requests.\n";
    }
    elsif ($stash->get('error') eq 'passwords_dont_match') {
    #line 940 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Passwords Don\'t Match');
    $output .=  "\n    The two passwords you entered did not match.\n";
    }
    elsif ($stash->get('error') eq 'password_too_long') {
    #line 944 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Password Too Long');
    $output .=  "\n    The password is more than 16 characters long. It must be no more than\n    16 characters.\n";
    }
    elsif ($stash->get('error') eq 'password_too_short') {
    #line 949 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Password Too Short');
    $output .=  "\n    The password is less than three characters long. It must be at least\n    three characters.\n";
    }
    elsif ($stash->get('error') eq 'patch_too_large') {
    #line 954 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'File Too Large');
    $output .=  "\n    The file you are trying to attach is ";
    #line 955 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filesize');
        
        &$filter($output);
    };
    
    $output .=  " \n    kilobytes (KB) in size.\n    Patches cannot be more than ";
    #line 957 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maxpatchsize' ]]);
    $output .=  " KB in size.\n    Try breaking your patch into several pieces.\n";
    }
    elsif ($stash->get('error') eq 'product_disabled') {
    #line 961 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Product closed for ";
    #line 961 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
    $output .=  " Entry";
        $output;
    });
    
    $output .=  "\n    Sorry, entering ";
    #line 962 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " into the\n    product <em>";
    #line 963 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</em> has been disabled.\n";
    }
    elsif ($stash->get('error') eq 'product_edit_denied') {
    #line 966 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Product Edit Access Denied');
    $output .=  "\n    You are not permitted to edit ";
    #line 967 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " in product ";
    #line 968 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'product_has_bugs') {
    #line 971 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Product has ";
    #line 971 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
    $output .=  "\n    There are ";
    #line 972 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$filter($output);
    };
    
    $output .=  " ";
    #line 972 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " entered for this product!\n    You must reassign those ";
    #line 973 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another product before you\n    can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'query_name_missing') {
    #line 977 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Search Name Specified');
    $output .=  "\n    You must enter a name for your search.\n";
    }
    elsif ($stash->get('error') eq 'query_name_too_long') {
    #line 981 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Query Name Too Long');
    $output .=  "\n    The name of the query must be less than 64 characters long.\n";
    }
    elsif ($stash->get('error') eq 'reassign_to_empty') {
    #line 985 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Reassignment');
    $output .=  "\n    To reassign ";
    #line 986 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'abug', 0]);
    $output .=  ", you must provide an address for\n    the new assignee. If you did not intentionally clear out the \n    \"Reassign ";
    #line 988 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " to\" field, ";
    #line 988 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'browserbugmessage' ]]);
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'report_access_denied') {
    #line 991 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Access Denied');
    $output .=  "\n    You do not have the permissions necessary to view reports for this product.\n";
    }
    elsif ($stash->get('error') eq 'require_component') {
    #line 995 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Component Needed');
    $output .=  "\n    To file this ";
    #line 996 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ", you must first choose a component.\n    If necessary, just guess.\n";
    }
    elsif ($stash->get('error') eq 'require_new_password') {
    #line 1000 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'New Password Needed');
    $output .=  "\n    You cannot change your password without choosing a new one.\n";
    }
    elsif ($stash->get('error') eq 'require_summary') {
    #line 1004 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Summary Needed');
    $output .=  "\n    You must enter a summary for this ";
    #line 1005 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'saved_search_used_by_whines') {
    #line 1008 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Saved Search In Use');
    $output .=  "\n    The saved search <em>";
    #line 1009 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('search_name');
        
        &$filter($output);
    };
    
    $output .=  "</em> is being used \n    by <a href=\"editwhines.cgi\">Whining events</a> with the following subjects:\n    ";
    #line 1011 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('subjects');
        
        &$filter($output);
    };
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'search_content_without_matches') {
    #line 1014 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Search');
    $output .=  "\n    The \"content\" field can only be used with \"matches\" search \n    and the \"matches\" search can only be used with the \"content\"\n    field.\n";
    }
    elsif ($stash->get('error') eq 'series_already_exists') {
    #line 1020 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Series Already Exists');
    $output .=  "\n      A series named <em>";
    #line 1021 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'category', 0]);
        
        &$filter($output);
    };
    
    $output .=  " /\n      ";
    #line 1022 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'subcategory', 0]);
        
        &$filter($output);
    };
    
    $output .=  " / \n      ";
    #line 1023 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['series', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</em>\n      already exists.\n    ";
    }
    elsif ($stash->get('error') eq 'sidebar_supports_mozilla_only') {
    $output .=  "\n    Sorry - sidebar.cgi currently only supports Mozilla based web browsers.\n    <a href=\"http://www.mozilla.org\">Upgrade today</a>. :-)\n";
    }
    elsif ($stash->get('error') eq 'still_unresolved_bugs') {
    #line 1054 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('dependency_count') eq 1) {
    #line 1032 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "# <a href=\"show_bug.cgi?id=";
    #line 1032 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">";
    #line 1032 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</a>\n      has still ";
    #line 1033 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'dependencies', 0]);
        
        &$filter($output);
    };
    
    $output .=  " unresolved";
    #line 1038 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['dependencies', 0, 0, 0, 'dependencies', 0]) eq 1) {
    $output .=  "\n        dependency";
    }
    else {
    $output .=  "\n        dependencies";
    }
    
    $output .=  ". Show\n      <a href=\"showdependencytree.cgi?id=";
    #line 1039 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['dependencies', 0, 0, 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">Dependency Tree</a>.";
    }
    else {
    $output .=  "\n      There are ";
    #line 1041 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('dependency_count');
        
        &$filter($output);
    };
    
    $output .=  " open ";
    #line 1041 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " which\n      have unresolved dependencies.\n      <br>";
    #line 1053 "template/en/custom/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('dependencies');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'bug'} = $value;
    #line 1045 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  "# <a href=\"show_bug.cgi?id=";
    #line 1045 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">";
    #line 1045 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</a>\n        has ";
    #line 1046 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dependencies', 0]);
        
        &$filter($output);
    };
    
    $output .=  " open";
    #line 1051 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['bug', 0, 'dependencies', 0]) eq 1) {
    $output .=  "\n          dependency.";
    }
    else {
    $output .=  "\n          dependencies.";
    }
    
    $output .=  "\n        (<a href=\"showdependencytree.cgi?id=";
    #line 1052 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">Dependency Tree</a>)<br>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n";
    }
    elsif ($stash->get('error') eq 'too_many_votes_for_bug') {
    #line 1057 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Vote');
    $output .=  "\n    You may only use at most ";
    #line 1058 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$filter($output);
    };
    
    $output .=  " votes for a single\n    ";
    #line 1059 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " in the\n    <tt>";
    #line 1060 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('prod');
        
        &$filter($output);
    };
    
    $output .=  "</tt> product, but you are trying to\n    use ";
    #line 1061 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$filter($output);
    };
    
    $output .=  ".\n";
    }
    elsif ($stash->get('error') eq 'too_many_votes_for_product') {
    #line 1064 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Illegal Vote');
    $output .=  "\n    You tried to use ";
    #line 1065 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('votes');
        
        &$filter($output);
    };
    
    $output .=  " votes,\n    which exceeds the ";
    #line 1066 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('max');
        
        &$filter($output);
    };
    
    $output .=  " vote per ";
    #line 1066 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " limit\n    for the <tt>";
    #line 1067 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('prod');
        
        &$filter($output);
    };
    
    $output .=  "</tt> product.\n";
    }
    elsif ($stash->get('error') eq 'token_inexistent') {
    #line 1070 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Token Does Not Exist');
    $output .=  "\n    The token you submitted does not exist, has expired, or has\n    been cancelled.\n";
    }
    elsif ($stash->get('error') eq 'too_soon_for_new_token') {
    #line 1075 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Too Soon For New Token');
    $output .=  "\n    You have requested a password token too recently to request\n    another.  Please wait a while and try again.\n";
    }
    elsif ($stash->get('error') eq 'unknown_keyword') {
    #line 1080 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Keyword');
    $output .=  "\n    <code>";
    #line 1081 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('keyword');
        
        &$filter($output);
    };
    
    $output .=  "</code> is not a known keyword.\n    The legal keyword names are <a href=\"describekeywords.cgi\">listed here</a>.\n";
    }
    elsif ($stash->get('error') eq 'unknown_tab') {
    #line 1085 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Unknown Tab');
    $output .=  "\n    <code>";
    #line 1086 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('current_tab_name');
        
        &$filter($output);
    };
    
    $output .=  "</code> is not a legal tab name.\n";
    }
    elsif ($stash->get('error') eq 'version_already_exists') {
    #line 1089 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Version Already Exists');
    $output .=  "\n    The version '";
    #line 1090 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' already exists for product '";
    #line 1091 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "'.\n";
    }
    elsif ($stash->get('error') eq 'version_blank_name') {
    #line 1094 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Blank Version Name Not Allowed');
    $output .=  "\n    You must enter a name for this version.\n";
    }
    elsif ($stash->get('error') eq 'version_has_bugs') {
    #line 1098 "template/en/custom/global/user-error.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Version has ";
    #line 1098 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugs', 0]);
        $output;
    });
    
    $output .=  "\n    There are ";
    #line 1099 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('nb');
        
        &$filter($output);
    };
    
    $output .=  " ";
    #line 1099 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " associated with this\n    version! You must reassign those ";
    #line 1100 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " to another version\n    before you can delete this one.\n";
    }
    elsif ($stash->get('error') eq 'version_name_too_long') {
    #line 1104 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Version Name Is Too Long');
    $output .=  "\n    The name of a version is limited to 20 characters. \n    '";
    #line 1106 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('name');
        
        &$filter($output);
    };
    
    $output .=  "' is too long (";
    #line 1106 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['name', 0, 'length', 0]);
    $output .=  " characters).\n";
    }
    elsif ($stash->get('error') eq 'version_not_specified') {
    #line 1109 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'No Version Specified');
    $output .=  "\n    No version specified when trying to edit versions.\n";
    }
    elsif ($stash->get('error') eq 'version_not_valid') {
    #line 1113 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Specified Version Does Not Exist');
    $output .=  "\n    The version '";
    #line 1114 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('version');
        
        &$filter($output);
    };
    
    $output .=  "' for product \n    '";
    #line 1115 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "' does not exist.\n";
    }
    elsif ($stash->get('error') eq 'users_deletion_disabled') {
    #line 1118 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Deletion not activated');
    $output .=  "\n    Sorry, the deletion of user accounts is not allowed.\n";
    }
    elsif ($stash->get('error') eq 'user_has_responsibility') {
    #line 1122 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Can\'t Delete User Account');
    $output .=  "\n    The user you want to delete is set up for roles as default ";
    #line 1123 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n    assignee or QA contact for at least one component.\n    For this reason, you cannot delete the account at this time.\n";
    }
    elsif ($stash->get('error') eq 'user_login_required') {
    #line 1128 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Login Name Required');
    $output .=  "\n    You must enter a login name for the new user.\n";
    }
    elsif ($stash->get('error') eq 'votes_must_be_nonnegative') {
    #line 1132 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Votes Must Be Non-negative');
    $output .=  "\n    Only use non-negative numbers for your ";
    #line 1133 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " votes.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_cancelling_email_change') {
    #line 1136 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to cancel an email address change.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_changing_passwd') {
    #line 1140 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to change your password.\n";
    }
    elsif ($stash->get('error') eq 'wrong_token_for_confirming_email_change') {
    #line 1144 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Wrong Token');
    $output .=  "\n    That token cannot be used to change your email address.\n";
    }
    elsif ($stash->get('error') eq 'value_out_of_range') {
    #line 1148 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Value Out Of Range');
    $output .=  "\n    Value is out of range for field \n    <em>";
    #line 1150 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['field_descs', 0, $stash->get('field'), 0]);
        
        &$filter($output);
    };
    
    $output .=  "</em>.\n";
    }
    elsif ($stash->get('error') eq 'zero_length_file') {
    #line 1153 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'File Is Empty');
    $output .=  "\n    The file you are trying to attach is empty!\n";
    }
    else {
    $output .=  "\n\n    ";
    #line 1159 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('error_message', $stash->get(['Hook', 0, 'process', [ 'errors' ]]));
    $output .=  "\n";
    #line 1168 "template/en/custom/global/user-error.html.tmpl"
    if (! $stash->get('error_message')) {
    #line 1162 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('title', 'Error string not found');
    $output .=  "\n      The user error string <code>";
    #line 1163 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error');
        
        &$filter($output);
    };
    
    $output .=  "</code> was not found.\n      Please send email to ";
    #line 1164 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  " describing the steps taken\n      to obtain this message.";
    }
    else {
    #line 1167 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$filter($output);
    };
    
    }
    
    }
    
        $output;
    });
    
    $output .=  "\n";
    #line 1174 "template/en/custom/global/user-error.html.tmpl"
    if (!($stash->get('header_done'))) {
    #line 1173 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    }
    
    $output .=  "\n\n<table cellpadding=\"20\">\n  <tr>\n    <td bgcolor=\"#ff0000\">\n      <font size=\"+2\">";
    #line 1180 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('none')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('error_message');
        
        &$filter($output);
    };
    
    $output .=  "\n      </font>\n    </td>\n  </tr>\n</table>\n\n<p>\n  Please press <b>Back</b> and try again.\n</p>\n\n";
    $output .=  "\n  ";
    #line 1194 "template/en/custom/global/user-error.html.tmpl"
    # USE
    $stash->set('Bugzilla',
                $context->plugin('Bugzilla'));
    #line 1195 "template/en/custom/global/user-error.html.tmpl"
    $stash->set('namedcmd', $stash->get(['Bugzilla', 0, 'cgi', 0, 'param', [ 'namedcmd' ]]));
    #line 1211 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get('namedcmd') && $stash->get('error') ne 'missing_query' && $stash->get('error') ne 'saved_search_used_by_whines') {
    $output .=  "\n  <p>  \n    Alternatively, you can    \n    <a href=\"buglist.cgi?cmdtype=dorem&amp;remaction=forget&amp;namedcmd=";
    #line 1201 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('namedcmd');
        
        &$filter($output);
    };
    
    $output .=  "\">forget</a>\n                  ";
    #line 1207 "template/en/custom/global/user-error.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['Bugzilla', 0, 'user', 0, 'queries', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'q'} = $value;
    #line 1206 "template/en/custom/global/user-error.html.tmpl"
    if ($stash->get(['q', 0, 'name', 0]) eq $stash->get('namedcmd')) {
    $output .=  "\n        or <a href=\"query.cgi?";
    #line 1205 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['q', 0, 'query', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">edit</a>";
    }
    ;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    \n    the saved search '";
    #line 1209 "template/en/custom/global/user-error.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('namedcmd');
        
        &$filter($output);
    };
    
    $output .=  "'.\n  </p>";
    }
    
    $output .=  "            \n";
    #line 1213 "template/en/custom/global/user-error.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
