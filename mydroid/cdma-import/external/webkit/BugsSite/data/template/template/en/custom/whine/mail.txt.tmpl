#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'whine/mail.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 32 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    #line 33 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n\n";
    #line 37 "template/en/custom/whine/mail.txt.tmpl"
    $stash->set('assignee_login_string', 'map_assigned_to.login_name');
    $output .=  "\n";
    #line 39 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get('body');
    $output .=  "\n";
    #line 46 "template/en/custom/whine/mail.txt.tmpl"
    if ($stash->get(['author', 0, 'login', 0]) eq $stash->get(['recipient', 0, 'login', 0])) {
    $output .=  "\n  To edit your whine schedule, visit the following URL:\n  ";
    #line 43 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "editwhines.cgi";
    }
    else {
    $output .=  "\n  This search was scheduled by ";
    #line 45 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['author', 0, 'login', 0]);
    $output .=  ".";
    }
    
    $output .=  "\n\n";
    #line 68 "template/en/custom/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('queries');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'query'} = $value;
    $output .=  "\n\n";
    #line 51 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['query', 0, 'title', 0]);
    $output .=  "\n";
    #line 52 "template/en/custom/whine/mail.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('repeat', [ $stash->get(['query', 0, 'title', 0, 'length', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  '-';
        
        &$filter($output);
    };
    
    $output .=  "\n";
    #line 66 "template/en/custom/whine/mail.txt.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['query', 0, 'bugs', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'bug'} = $value;
    #line 55 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " ";
    #line 55 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  ":\n  ";
    #line 56 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "show_bug.cgi?id=";
    #line 56 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    $output .=  "\n  Priority: ";
    #line 57 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'priority', 0]);
    $output .=  "  Severity: ";
    #line 58 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'bug_severity', 0]);
    $output .=  "  Platform: ";
    #line 59 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'rep_platform', 0]);
    $output .=  "\n  Assignee: ";
    #line 60 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, $stash->get('assignee_login_string'), 0]);
    $output .=  "\n    Status: ";
    #line 61 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['status_descs', 0, $stash->get(['bug', 0, 'bug_status', 0]), 0]);
    #line 63 "template/en/custom/whine/mail.txt.tmpl"
    if ($stash->get(['bug', 0, 'resolution', 0])) {
    $output .=  " Resolution: ";
    #line 62 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['resolution_descs', 0, $stash->get(['bug', 0, 'resolution', 0]), 0]);
    }
    
    $output .=  "\n   Summary: ";
    #line 64 "template/en/custom/whine/mail.txt.tmpl"
    $output .=  $stash->get(['bug', 0, 'short_desc', 0]);
    $output .=  "\n";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
