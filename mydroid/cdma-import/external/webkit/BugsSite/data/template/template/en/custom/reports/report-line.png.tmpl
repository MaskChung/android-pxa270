#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'reports/report-line.png.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    #line 22 "template/en/custom/reports/report-line.png.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 0 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set('y_label', ('' . $stash->get(['terms', 0, 'Bugs', 0])));
    $output .=  "\n";
    #line 26 "template/en/custom/reports/report-line.png.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    $output .=  "\n";
    #line 28 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set('col_field_disp', $stash->get(['field_descs', 0, $stash->get('col_field'), 0]) || $stash->get('col_field'));
    $output .=  "\n";
    #line 34 "template/en/custom/reports/report-line.png.tmpl"
    if ($stash->get('col_field') eq 'bug_status') {
    #line 33 "template/en/custom/reports/report-line.png.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = [ 0..$stash->get(['data', 0, 0, 0, 0, 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'i'} = $value;
    #line 32 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0], $stash->get(['status_descs', 0, $stash->get(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0]), 0]));;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n";
    #line 40 "template/en/custom/reports/report-line.png.tmpl"
    if ($stash->get('col_field') eq 'resolution') {
    #line 39 "template/en/custom/reports/report-line.png.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = [ 0..$stash->get(['data', 0, 0, 0, 0, 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'i'} = $value;
    #line 38 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0], $stash->get(['resolution_descs', 0, $stash->get(['data', 0, 0, 0, 0, 0, $stash->get('i'), 0]), 0]));;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n";
    #line 46 "template/en/custom/reports/report-line.png.tmpl"
    if ($stash->get('row_field') eq 'bug_status') {
    #line 45 "template/en/custom/reports/report-line.png.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = [ 0..$stash->get(['row_names', 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'i'} = $value;
    #line 44 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set(['row_names', 0, $stash->get('i'), 0], $stash->get(['status_descs', 0, $stash->get(['row_names', 0, $stash->get('i'), 0]), 0]));;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n";
    #line 52 "template/en/custom/reports/report-line.png.tmpl"
    if ($stash->get('row_field') eq 'resolution') {
    #line 51 "template/en/custom/reports/report-line.png.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = [ 0..$stash->get(['row_names', 0, 'max', 0]) ];
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'i'} = $value;
    #line 50 "template/en/custom/reports/report-line.png.tmpl"
    $stash->set(['row_names', 0, $stash->get('i'), 0], $stash->get(['resolution_descs', 0, $stash->get(['row_names', 0, $stash->get('i'), 0]), 0]));;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    }
    
    $output .=  "\n";
    #line 59 "template/en/custom/reports/report-line.png.tmpl"
    if ($stash->get('cumulate')) {
    #line 55 "template/en/custom/reports/report-line.png.tmpl"
    # USE
    $stash->set('graph',
                $context->plugin('GD.Graph.area', [ $stash->get('width'), $stash->get('height') ]));
    #line 56 "template/en/custom/reports/report-line.png.tmpl"
    $output .=  $stash->get(['graph', 0, 'set', [ { 'cumulate' => 'true' } ]]);
    }
    else {
    #line 58 "template/en/custom/reports/report-line.png.tmpl"
    # USE
    $stash->set('graph',
                $context->plugin('GD.Graph.lines', [ $stash->get('width'), $stash->get('height') ]));
    }
    
    $output .=  "\n";
    #line 61 "template/en/custom/reports/report-line.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('null')
                  || $context->throw($context->error);
    
    #line 61 "template/en/custom/reports/report-line.png.tmpl"
    $output .=  $stash->get(['graph', 0, 'set', [ { 'x_label' => $stash->get('col_field_disp'), 'y_label' => $stash->get('y_label'), 'y_tick_number' => 8, 'x_label_position' => 0.5, 'x_labels_vertical' => $stash->get('x_labels_vertical'), 'legend_placement' => 'RT', 'line_width' => 2, 'dclrs' => [ 'lred', 'lgreen', 'lblue', 'lyellow', 'lpurple', 'lorange', 'black', 'green', 'blue', 'dpink', 'lbrown', 'gray', 'red', 'dpurple', 'gold', 'marine' ] } ]]);
    #line 61 "template/en/custom/reports/report-line.png.tmpl"
    $output .=  $stash->get(['graph', 0, 'set_legend', [ $stash->get(['row_names', 0, 0, 0]), $stash->get(['row_names', 0, 1, 0]), $stash->get(['row_names', 0, 2, 0]), $stash->get(['row_names', 0, 3, 0]), $stash->get(['row_names', 0, 4, 0]), $stash->get(['row_names', 0, 5, 0]), $stash->get(['row_names', 0, 6, 0]), $stash->get(['row_names', 0, 7, 0]), $stash->get(['row_names', 0, 8, 0]), $stash->get(['row_names', 0, 9, 0]), $stash->get(['row_names', 0, 10, 0]), $stash->get(['row_names', 0, 11, 0]), $stash->get(['row_names', 0, 12, 0]), $stash->get(['row_names', 0, 13, 0]), $stash->get(['row_names', 0, 14, 0]), $stash->get(['row_names', 0, 15, 0]) ]]);
    #line 61 "template/en/custom/reports/report-line.png.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('stdout', [ 1 ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['graph', 0, 'plot', [ $stash->get(['data', 0, 0, 0]) ], 'png', 0]);
        
        &$filter($output);
    };
    
        
        &$filter($output);
    };
    
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
