#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'bug/time.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n                                      ";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'formattimeunit' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
        #line 29 "template/en/custom/bug/time.html.tmpl"
        
        # CAPTURE
        $stash->set('time_unit', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('format', [ '%.2f' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('time_unit');
            
            &$filter($output);
        };
        
            $output;
        });
        
        #line 34 "template/en/custom/bug/time.html.tmpl"
        if ($stash->get(['time_unit', 0, 'match', [ '0\Z' ]])) {
        #line 31 "template/en/custom/bug/time.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('format', [ '%.1f' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('time_unit');
            
            &$filter($output);
        };
        
        }
        else {
        #line 33 "template/en/custom/bug/time.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('format', [ '%.2f' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('time_unit');
            
            &$filter($output);
        };
        
        }
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'calculatepercentage' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  ";
        #line 47 "template/en/custom/bug/time.html.tmpl"
        if (($stash->get('act') + $stash->get('rem')) > 0) {
        #line 43 "template/en/custom/bug/time.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('format', [ '%d' ])
                      || $context->throw($context->error);
        
        $output .=  ($stash->get('act') / ($stash->get('act') + $stash->get('rem'))) * 100;
            
            &$filter($output);
        };
        
        }
        else {
        $output .=  "\n    0";
        }
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
