#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'whine/schedule.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    $output .=  "\n\n";
    $output .=  "\n";
    #line 36 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n";
    #line 38 "template/en/custom/whine/schedule.html.tmpl"
    $stash->set('title', 'Set up whining');
    #line 39 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl');
    $output .=  "\n\n<p>\n  \"Whining\" is when ";
    #line 42 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " executes a saved query at a regular interval\n  and sends the resulting list of ";
    #line 43 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " via email.\n</p>\n\n<p>\n  To set up a new whine event, click \"Add a new event.\"  Enter a subject line\n  for the message that will be sent, along with a block of text that will\n  accompany the ";
    #line 49 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " list in the body of the message.\n</p>\n\n<p>\n  Schedules are added to an event by clicking on \"Add a new schedule.\"  A schedule\n  consists of a day, a time of day or interval of times\n  (e.g., every 15 minutes), and a target email address that may or may not be\n  alterable, depending on your privileges.  Events may have more than one schedule\n  in order to run at multiple times or for different users.\n</p>\n\n<p>\n  Queries come from saved searches, which are created by executing a <a\n  href=\"query.cgi\">search</a>, then telling ";
    #line 62 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  " to remember\n  the search under a particular name.  Add a query by clicking \"Add a new\n  query\", and select the desired saved search name under \"Search\" and add a\n  title for the ";
    #line 65 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " table.  The optional number entered under\n  \"Sort\" will determine the execution order (lowest to highest) if multiple\n  queries are listed.  If you check \"One message per ";
    #line 67 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  ",\" each ";
    #line 67 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  " that matches the search will be sent in its own email message.\n</p>\n\n<form method=\"post\" action=\"editwhines.cgi\">\n";
    $output .=  "\n<input type=\"submit\" value=\"Update / Commit\" name=\"commit\"\n       style=\"visibility: hidden\">\n<input type=\"hidden\" name=\"update\" value=\"1\">\n";
    #line 286 "template/en/custom/whine/schedule.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('events');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'event'} = $value;
    $output .=  "\n\n<table cellspacing=\"2px\" cellpadding=\"2px\" border=\"0\" width=\"100%\"\n       style=\"border: 1px solid;\">\n  <tr>\n    <th align=\"left\" bgcolor=\"#FFFFFF\" colspan=\"2\">\n      Event: \n    </th>\n    <td align=\"right\">\n      <input type=\"submit\" value=\"Remove Event\"\n             name=\"remove_event_";
    #line 88 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "\">\n    </td>\n  </tr>\n\n  <tr>\n    <td valign=\"top\" align=\"right\">\n      Email subject line:\n    </td>\n    <td>\n      <input type=\"text\" name=\"event_";
    #line 97 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "_subject\"\n             size=\"60\" maxlength=\"128\" value=\"";
    #line 99 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['event', 0, 'value', 0, 'subject', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">\n    </td>\n  </tr>\n\n  <tr>\n    <td valign=\"top\" align=\"right\">\n      Descriptive text sent within whine message:\n    </td>\n    <td>\n      <textarea name=\"event_";
    #line 108 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "_body\"\n                rows=\"5\" cols=\"80\">";
    #line 110 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['event', 0, 'value', 0, 'body', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</textarea>\n    </td>\n  </tr>\n";
    #line 198 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get(['event', 0, 'value', 0, 'schedule', 0, 'size', 0]) eq 0) {
    $output .=  "\n\n    <tr>\n      <td valign=\"top\" align=\"right\">\n        Schedule:\n      </td>\n      <td align=\"left\" bgcolor=\"#FFEEEE\">\n        Not scheduled to run<br>\n        <input type=\"submit\" value=\"Add a new schedule\"\n               name=\"add_schedule_";
    #line 123 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "\">\n      </td>\n    </tr>\n";
    }
    else {
    $output .=  "\n\n    <tr>\n      <td valign=\"top\" align=\"right\">\n        Schedule:\n      </td>\n      <td align=\"left\" bgcolor=\"#EEFFEE\">\n\n        <table>\n          <tr>\n            <th>\n              Interval\n            </th>";
    #line 144 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get('mail_others')) {
    $output .=  "\n              <th>\n                Mail to\n              </th>";
    }
    
    $output .=  "\n          </tr>";
    #line 183 "template/en/custom/whine/schedule.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['event', 0, 'value', 0, 'schedule', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'schedule'} = $value;
    $output .=  "\n            <tr>\n              <td align=\"left\">\n\n                ";
    $output .=  "\n\n                <input type=\"hidden\" value=\"";
    #line 153 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['schedule', 0, 'day', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       name=\"orig_day_";
    #line 154 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\">\n                <input type=\"hidden\" value=\"";
    #line 155 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['schedule', 0, 'time', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       name=\"orig_time_";
    #line 156 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\">";
    #line 157 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('day_field', { 'val' => $stash->get(['schedule', 0, 'day', 0]) });
    #line 158 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('time_field', { 'val' => $stash->get(['schedule', 0, 'time', 0]) });
    $output .=  "\n              </td>\n              <td align=\"left\">";
    #line 176 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get('mail_others')) {
    $output .=  "\n                  <input type=\"hidden\" name=\"orig_mailto_type_";
    #line 162 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\"\n                         value=\"";
    #line 163 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['schedule', 0, 'mailto_type', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">\n                  <select name=\"mailto_type_";
    #line 164 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\">\n                    <option value=\"0\" ";
    #line 167 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get(['schedule', 0, 'mailto_type', 0]) eq 0) {
    $output .=  "\n                                        selected";
    }
    
    $output .=  ">User</option>\n                    <option value=\"1\" ";
    #line 170 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get(['schedule', 0, 'mailto_type', 0]) eq 1) {
    $output .=  "\n                                        selected";
    }
    
    $output .=  ">Group</option>\n                  </select>\n                  <input type=\"hidden\" name=\"orig_mailto_";
    #line 172 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\"\n                         value=\"";
    #line 173 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['schedule', 0, 'mailto', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">\n                  <input type=\"text\" name=\"mailto_";
    #line 174 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\"\n                         value=\"";
    #line 175 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['schedule', 0, 'mailto', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\" size=\"30\">";
    }
    
    $output .=  "\n              </td>\n              <td align=\"left\">\n                <input type=\"submit\" value=\"Remove\"\n                       name=\"remove_schedule_";
    #line 180 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['schedule', 0, 'id', 0]);
    $output .=  "\">\n              </td>\n            </tr>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n        <tr>\n          <td>\n            <input type=\"submit\" value=\"Add a new schedule\"\n                   name=\"add_schedule_";
    #line 188 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "\">\n          </td>\n        </tr>\n\n        </table>\n\n      </td>\n\n    </tr>\n";
    }
    
    $output .=  "\n";
    #line 282 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get(['event', 0, 'value', 0, 'queries', 0, 'size', 0]) eq 0) {
    $output .=  "\n\n    <tr>\n      <td valign=\"top\" align=\"right\">\n        Queries:\n      </td>\n      <td align=\"left\" colspan=\"1\">\n        No queries <br>\n        <input type=\"submit\" value=\"Add a new query\" name=\"add_query_";
    #line 208 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "\">\n      </td>\n      <td align=\"right\" valign=\"bottom\">\n        <input type=\"submit\" value=\"Update / Commit\" name=\"commit\">\n      </td>\n    </tr>\n";
    }
    else {
    $output .=  "\n\n    <tr>\n      <td valign=\"top\" align=\"right\">\n        Queries:\n      </td>\n      <td align=\"left\">\n\n        <table>\n          <tr>\n            <th>Sort</th>\n            <th>Search</th>\n            <th>Title</th>\n          </tr>\n";
    #line 265 "template/en/custom/whine/schedule.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['event', 0, 'value', 0, 'queries', 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'query'} = $value;
    $output .=  "\n\n            <tr>\n              <td align=\"left\">\n                <input type=\"text\" name=\"query_sort_";
    #line 234 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\"\n                       size=\"3\" value=\"";
    #line 235 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'sort', 0]);
    $output .=  "\">\n                <input type=\"hidden\" value=\"";
    #line 236 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'sort', 0]);
    $output .=  "\"\n                       name=\"orig_query_sort_";
    #line 237 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">\n              </td>\n              <td align=\"left\">\n                <input type=\"hidden\" value=\"";
    #line 240 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       name=\"orig_query_name_";
    #line 241 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">";
    #line 242 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('query_field', { 'thisquery' => $stash->get(['query', 0, 'name', 0]) });
    $output .=  "\n              </td>\n              <td align=\"left\">\n                <input type=\"hidden\" value=\"";
    #line 245 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'title', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       name=\"orig_query_title_";
    #line 246 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">\n                <input type=\"text\" name=\"query_title_";
    #line 247 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\"\n                       size=\"50\" value=\"";
    #line 248 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'title', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       maxlength=\"64\">\n              </td>\n              <td align=\"left\">\n                <input type=\"hidden\" value=\"";
    #line 252 "template/en/custom/whine/schedule.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['query', 0, 'onemailperbug', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\"\n                       name=\"orig_query_onemailperbug_";
    #line 253 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">\n                <input type=\"checkbox\" ";
    #line 255 "template/en/custom/whine/schedule.html.tmpl"
    if ($stash->get(['query', 0, 'onemailperbug', 0]) eq 1) {
    $output .=  "\n                       checked ";
    }
    
    $output .=  "name=\"query_onemailperbug_";
    #line 256 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">\n                One message per ";
    #line 257 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "\n              </td>\n              <td align=\"right\">\n                <input type=\"submit\" value=\"Remove\"\n                       name=\"remove_query_";
    #line 261 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['query', 0, 'id', 0]);
    $output .=  "\">\n              </td>\n            </tr>\n";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n          <tr>\n            <td colspan=\"3\">\n              <input type=\"submit\" value=\"Add a new query\"\n                     name=\"add_query_";
    #line 270 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $stash->get(['event', 0, 'key', 0]);
    $output .=  "\">\n            </td>\n          </tr>\n\n        </table>\n\n      </td>\n      <td align=\"right\" valign=\"bottom\">\n        <input type=\"submit\" value=\"Update / Commit\" name=\"commit\">\n      </td>\n    </tr>\n";
    }
    
    $output .=  "\n\n</table>\n";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n<p align=\"left\">\n  <input type=\"submit\" value=\"Add a new event\" name=\"add_event\">\n</p>\n\n</form>\n";
    #line 294 "template/en/custom/whine/schedule.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'query_field' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n";
        #line 310 "template/en/custom/whine/schedule.html.tmpl"
        if ($stash->get(['available_queries', 0, 'size', 0]) > 0) {
        $output .=  "\n\n    <select name=\"query_name_";
        #line 300 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['query', 0, 'id', 0]);
        $output .=  "\">";
        #line 305 "template/en/custom/whine/schedule.html.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('available_queries');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'q'} = $value;
        $output .=  "\n        <option ";
        #line 302 "template/en/custom/whine/schedule.html.tmpl"
        if ($stash->get('q') eq $stash->get('thisquery')) {
        $output .=  'selected';
        }
        
        $output .=  " value=\"";
        #line 302 "template/en/custom/whine/schedule.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('q');
            
            &$filter($output);
        };
        
        $output .=  "\">";
        #line 303 "template/en/custom/whine/schedule.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('q');
            
            &$filter($output);
        };
        
        $output .=  "\n        </option>";;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        $output .=  "\n    </select>\n";
        }
        else {
        $output .=  "\n    Please visit the <a href=\"query.cgi\">Search</a> page and save a query";
        }
        
        $output .=  "\n\n";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'time_field' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n<select name=\"time_";
        #line 373 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['schedule', 0, 'id', 0]);
        $output .=  "\">\n";
        #line 375 "template/en/custom/whine/schedule.html.tmpl"
        $stash->set('options', [ [ '0', 'at midnight' ], [ '1', 'at 01:00' ], [ '2', 'at 02:00' ], [ '3', 'at 03:00' ], [ '4', 'at 04:00' ], [ '5', 'at 05:00' ], [ '6', 'at 06:00' ], [ '7', 'at 07:00' ], [ '8', 'at 08:00' ], [ '9', 'at 09:00' ], [ '10', 'at 10:00' ], [ '11', 'at 11:00' ], [ '12', 'at 12:00' ], [ '13', 'at 13:00' ], [ '14', 'at 14:00' ], [ '15', 'at 15:00' ], [ '16', 'at 16:00' ], [ '17', 'at 17:00' ], [ '18', 'at 18:00' ], [ '19', 'at 19:00' ], [ '20', 'at 20:00' ], [ '21', 'at 21:00' ], [ '22', 'at 22:00' ], [ '23', 'at 23:00' ], [ '60min', 'every hour' ], [ '30min', 'every 30 minutes' ], [ '15min', 'every 15 minutes' ] ]);
        $output .=  "\n";
        #line 412 "template/en/custom/whine/schedule.html.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('options');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'option'} = $value;
        $output .=  "\n        <option value=\"";
        #line 408 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['option', 0, 0, 0]);
        $output .=  "\" ";
        #line 409 "template/en/custom/whine/schedule.html.tmpl"
        if ($stash->get('val') eq $stash->get(['option', 0, 0, 0])) {
        $output .=  " selected";
        }
        
        $output .=  ">";
        #line 410 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['option', 0, 1, 0]);
        $output .=  "        </option>";;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        $output .=  "\n\n</select>\n\n";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'day_field' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n  <select name=\"day_";
        #line 315 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['schedule', 0, 'id', 0]);
        $output .=  "\">";
        #line 316 "template/en/custom/whine/schedule.html.tmpl"
        $stash->set('options', [ [ 'All', 'Each day' ], [ 'MF', 'Monday through Friday' ], [ 'Sun', 'Sunday' ], [ 'Mon', 'Monday' ], [ 'Tue', 'Tuesday' ], [ 'Wed', 'Wednesday' ], [ 'Thu', 'Thursday' ], [ 'Fri', 'Friday' ], [ 'Sat', 'Saturday' ], [ '1', 'On the 1st of the month' ], [ '2', 'On the 2nd of the month' ], [ '3', 'On the 3rd of the month' ], [ '4', 'On the 4th of the month' ], [ '5', 'On the 5th of the month' ], [ '6', 'On the 6th of the month' ], [ '7', 'On the 7th of the month' ], [ '8', 'On the 8th of the month' ], [ '9', 'On the 9th of the month' ], [ '10', 'On the 10th of the month' ], [ '11', 'On the 11th of the month' ], [ '12', 'On the 12th of the month' ], [ '13', 'On the 13th of the month' ], [ '14', 'On the 14th of the month' ], [ '15', 'On the 15th of the month' ], [ '16', 'On the 16th of the month' ], [ '17', 'On the 17th of the month' ], [ '18', 'On the 18th of the month' ], [ '19', 'On the 19th of the month' ], [ '20', 'On the 20th of the month' ], [ '21', 'On the 21st of the month' ], [ '22', 'On the 22nd of the month' ], [ '23', 'On the 23rd of the month' ], [ '24', 'On the 24th of the month' ], [ '25', 'On the 25th of the month' ], [ '26', 'On the 26th of the month' ], [ '27', 'On the 27th of the month' ], [ '28', 'On the 28th of the month' ], [ '29', 'On the 29th of the month' ], [ '30', 'On the 30th of the month' ], [ '31', 'On the 31st of the month' ], [ 'last', 'Last day of the month' ] ]);
        $output .=  "\n";
        #line 367 "template/en/custom/whine/schedule.html.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('options');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'option'} = $value;
        $output .=  "\n        <option value=\"";
        #line 363 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['option', 0, 0, 0]);
        $output .=  "\" ";
        #line 364 "template/en/custom/whine/schedule.html.tmpl"
        if ($stash->get('val') eq $stash->get(['option', 0, 0, 0])) {
        $output .=  " selected";
        }
        
        $output .=  ">";
        #line 365 "template/en/custom/whine/schedule.html.tmpl"
        $output .=  $stash->get(['option', 0, 1, 0]);
        $output .=  "        </option>";;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        $output .=  "\n\n  </select>\n";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
