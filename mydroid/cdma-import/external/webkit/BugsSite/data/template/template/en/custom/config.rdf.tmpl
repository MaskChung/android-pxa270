#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'config.rdf.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    #line 1 "template/en/custom/config.rdf.tmpl"
    $stash->set('template_version', '1.0@bugzilla.org');
    $output .=  "\n";
    $output .=  "\n\n<?xml version=\"1.0\"?>\n<!-- Note: this interface is experimental and under development.\n   - We may and probably will make breaking changes to it in the future. -->\n\n<RDF xmlns=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n     xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n     xmlns:bz=\"http://www.bugzilla.org/rdf#\">\n\n<bz:installation rdf:about=\"";
    #line 30 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
        
        &$filter($output);
    };
    
    $output .=  "\">\n  <bz:install_version>";
    #line 31 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('VERSION');
        
        &$filter($output);
    };
    
    $output .=  "</bz:install_version>\n  <bz:maintainer>";
    #line 32 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
        
        &$filter($output);
    };
    
    $output .=  "</bz:maintainer>\n\n  <bz:status>\n    <Seq>";
    #line 38 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('status');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 37 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status>\n\n  <bz:status_open>\n    <Seq>";
    #line 46 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('open_status');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 45 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status_open>\n\n  <bz:status_closed>\n    <Seq>";
    #line 54 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('closed_status');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 53 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:status_closed>\n\n  <bz:resolution>\n    <Seq>";
    #line 62 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('resolution');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 61 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:resolution>\n\n  <bz:keyword>\n    <Seq>";
    #line 70 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('keyword');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 69 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:keyword>\n\n  <bz:platform>\n    <Seq>";
    #line 78 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('platform');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 77 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:platform>\n\n  <bz:op_sys>\n    <Seq>";
    #line 86 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('op_sys');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 85 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:op_sys>\n\n  <bz:priority>\n    <Seq>";
    #line 94 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('priority');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 93 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:priority>\n\n  <bz:severity>\n    <Seq>";
    #line 102 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('severity');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>";
    #line 101 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:severity>\n\n  <bz:products>\n    <Seq>";
    #line 141 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('legal_products');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'product'} = $value;
    $output .=  "\n        <li>\n          <bz:product rdf:about=\"";
    #line 110 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "product.cgi?name=";
    #line 110 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
    #line 111 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  "</bz:name>\n\n            <bz:components>\n              <Seq>";
    #line 117 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['components_by_product', 0, $stash->get('product'), 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'component'} = $value;
    $output .=  "\n                  <li resource=\"";
    #line 116 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "component.cgi?name=";
    #line 116 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('component');
        
        &$filter($output);
    };
    
    $output .=  "\"/>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n              </Seq>\n            </bz:components>\n\n            <bz:versions>\n              <Seq>";
    #line 125 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['versions_by_product', 0, $stash->get('product'), 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'version'} = $value;
    $output .=  "\n                  <li resource=\"";
    #line 124 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "version.cgi?name=";
    #line 124 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('version');
        
        &$filter($output);
    };
    
    $output .=  "\"/>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n              </Seq>\n            </bz:versions>\n";
    #line 137 "template/en/custom/config.rdf.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
    $output .=  "\n              <bz:target_milestones>\n                <Seq>";
    #line 134 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get(['milestones_by_product', 0, $stash->get('product'), 0]);
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'milestone'} = $value;
    $output .=  "\n                    <li resource=\"";
    #line 133 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "milestone.cgi?name=";
    #line 133 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('milestone');
        
        &$filter($output);
    };
    
    $output .=  "\"/>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n                </Seq>\n              </bz:target_milestones>";
    }
    
    $output .=  "\n\n          </bz:product>\n        </li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:products>\n\n  <bz:components>\n    <Seq>";
    #line 153 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('legal_components');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>\n          <bz:component rdf:about=\"";
    #line 149 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "component.cgi?name=";
    #line 149 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
    #line 150 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</bz:name>\n          </bz:component>\n        </li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:components>\n\n  <bz:versions>\n    <Seq>";
    #line 165 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('legal_versions');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>\n          <bz:version rdf:about=\"";
    #line 161 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "version.cgi?name=";
    #line 161 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
    #line 162 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</bz:name>\n          </bz:version>\n        </li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:versions>\n";
    #line 181 "template/en/custom/config.rdf.tmpl"
    if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
    $output .=  "\n    <bz:target_milestones>\n      <Seq>";
    #line 178 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('legal_milestones');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n          <li>\n            <bz:target_milestone rdf:about=\"";
    #line 174 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "milestone.cgi?name=";
    #line 174 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "\">\n              <bz:name>";
    #line 175 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('item');
        
        &$filter($output);
    };
    
    $output .=  "</bz:name>\n            </bz:target_milestone>\n          </li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n      </Seq>\n    </bz:target_milestones>";
    }
    
    $output .=  "\n\n  <bz:fields>\n    <Seq>";
    #line 185 "template/en/custom/config.rdf.tmpl"
    $output .=  $context->process('global/field-descs.none.tmpl');
    #line 193 "template/en/custom/config.rdf.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('field');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'item'} = $value;
    $output .=  "\n        <li>\n          <bz:field rdf:about=\"";
    #line 188 "template/en/custom/config.rdf.tmpl"
    $output .=  $stash->get(['Param', [ 'urlbase' ]]);
    $output .=  "field.cgi?name=";
    #line 188 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "\">\n            <bz:name>";
    #line 189 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'name', 0]);
        
        &$filter($output);
    };
    
    $output .=  "</bz:name>\n            <bz:description>";
    #line 190 "template/en/custom/config.rdf.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['field_descs', 0, $stash->get(['item', 0, 'name', 0]), 0]) || $stash->get(['item', 0, 'description', 0]));
        
        &$filter($output);
    };
    
    $output .=  "</bz:description>\n          </bz:field>\n        </li>";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n    </Seq>\n  </bz:fields>\n</bz:installation>\n\n</RDF>\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
