#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'admin/products/deleted.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    #line 18 "template/en/custom/admin/products/deleted.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => 'Deleting product' });
    $output .=  "\n";
    #line 24 "template/en/custom/admin/products/deleted.html.tmpl"
    if ($stash->get('nb_bugs')) {
    $output .=  "\n  All references to deleted ";
    #line 23 "template/en/custom/admin/products/deleted.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bugs', 0]);
    $output .=  " removed.";
    }
    
    $output .=  "\n\n<p>\n  Components deleted.<br>\n  Versions deleted.<br>\n  Milestones deleted.\n</p>\n\n<p>\n  Group controls deleted.<br>\n  Flag inclusions and exclusions deleted.\n</p>\n\n<p>\n  Product ";
    #line 38 "template/en/custom/admin/products/deleted.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('product');
        
        &$filter($output);
    };
    
    $output .=  " deleted.\n</p>\n";
    #line 41 "template/en/custom/admin/products/deleted.html.tmpl"
    $output .=  $context->process('admin/products/footer.html.tmpl', { 'no_edit_product_link' => 1 });
    $output .=  "\n";
    #line 45 "template/en/custom/admin/products/deleted.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
