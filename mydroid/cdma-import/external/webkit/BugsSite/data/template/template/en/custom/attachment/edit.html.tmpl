#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1189986225',
        'name' => 'attachment/edit.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    $output .=  "\n";
    #line 22 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\n";
    #line 25 "template/en/custom/attachment/edit.html.tmpl"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    $output .=  "Edit Attachment #";
    #line 25 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  " for ";
    #line 25 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  " #";
    #line 25 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('bugid');
        $output;
    });
    
    #line 27 "template/en/custom/attachment/edit.html.tmpl"
    
    # CAPTURE
    $stash->set('h1', do {
        my $output = '';
    $output .=  "Edit Attachment #";
    #line 26 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  " for\n  ";
    #line 0 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get(['GetBugLink', [ $stash->get('bugid'), ($stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get('bugid')) ]]);
        $output;
    });
    
    #line 28 "template/en/custom/attachment/edit.html.tmpl"
    
    # CAPTURE
    $stash->set('h2', do {
        my $output = '';
    #line 28 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('bugsummary');
        
        &$filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
    #line 30 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'h1' => $stash->get('h1'), 'h2' => $stash->get('h2'), 'style' => '
        table.attachment_info th { text-align: right; vertical-align: top; }
        table.attachment_info td { text-align: left; vertical-align: top; }
        #noview { text-align: left; vertical-align: middle; }
    
        table#flags th, table#flags td { font-size: small; vertical-align: baseline; text-align: left; }
      ' });
    $output .=  "\n\n<script type=\"text/javascript\">\n  <!--\n  var prev_mode = 'raw';\n  var current_mode = 'raw';\n  var has_edited = 0;\n  var has_viewed_as_diff = 0;\n  var viewing_formatted_diff = false;\n  function editAsComment()\n    {\n      // Get the content of the document as a string.\n      var viewFrame = document.getElementById('viewFrame');\n      var aSerializer = new XMLSerializer();\n      var contentDocument = viewFrame.contentDocument;\n      var theContent = aSerializer.serializeToString(contentDocument);\n\n      // If this is a plaintext document, remove cruft that Mozilla adds\n      // because it treats it as an HTML document with a big PRE section.\n      // http://bugzilla.mozilla.org/show_bug.cgi?id=86012\n      var contentType = '";
    #line 61 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttype');
        
        &$filter($output);
    };
    
    $output .=  "';\n      if ( contentType == 'text/plain' )\n        {\n          theContent = theContent.replace( /^<html><head\\/?><body><pre>/i , \"\" );\n          theContent = theContent.replace( /<\\/pre><\\/body><\\/html>\$/i , \"\" );\n          theContent = theContent.replace( /&lt;/gi , \"<\" );\n          theContent = theContent.replace( /&gt;/gi , \">\" );\n          theContent = theContent.replace( /&amp;/gi , \"&\" );\n        }\n\n      // Add mail-style quote indicators (>) to the beginning of each line.\n      // \".*\\n\" matches lines that end with a newline, while \".+\" matches\n      // the rare situation in which the last line of a file does not end\n      // with a newline.\n      theContent = theContent.replace( /(.*\\n|.+)/g , \">\$1\" );\n\n      switchToMode('edit');\n\n      // Copy the contents of the diff into the textarea\n      var editFrame = document.getElementById('editFrame');\n      editFrame.value = theContent;\n      editFrame.value += \"\\n\\n\";\n\n      has_edited = 1;\n    }\n  function undoEditAsComment()\n    {\n      switchToMode(prev_mode);\n    }\n  function redoEditAsComment()\n    {\n      switchToMode('edit');\n    }\n  function viewPrettyPatch()\n    {\n      viewing_formatted_diff = !viewing_formatted_diff;\n      var src = \"attachment-aroben.cgi?id=";
    #line 97 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\";\n      var buttonText = \"View Formatted Diff\";\n      if (viewing_formatted_diff) {\n        src += \"&action=prettypatch\"\n        buttonText = \"View Plain Diff\";\n      }\n\n      document.getElementById('viewFrame').src = src;\n      document.getElementById('viewPrettyPatchButton').innerHTML = buttonText;\n    }";
    #line 120 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n  function viewDiff()\n    {\n      switchToMode('diff');\n\n      // If we have not viewed as diff before, set the view diff frame URL\n      if (!has_viewed_as_diff) {\n        var viewDiffFrame = document.getElementById('viewDiffFrame');\n        viewDiffFrame.src =\n            'attachment.cgi?id=";
    #line 116 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "&action=diff&headers=0';\n        has_viewed_as_diff = 1;\n      }\n    }";
    }
    
    $output .=  "\n  function viewRaw()\n    {\n      switchToMode('raw');\n    }\n\n  function switchToMode(mode)\n    {\n      if (mode == current_mode) {\n        alert('switched to same mode!  This should not happen.');\n        return;\n      }\n\n      // Switch out of current mode\n      if (current_mode == 'edit') {\n        hideElementById('editFrame');\n        hideElementById('undoEditButton');\n      } else if (current_mode == 'raw') {\n        hideElementById('viewFrame');\n        hideElementById('viewPrettyPatchButton');";
    #line 142 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n        hideElementById('viewDiffButton');";
    }
    
    $output .=  "\n        hideElementById(has_edited ? 'redoEditButton' : 'editButton');\n        hideElementById('smallCommentFrame');\n      } else if (current_mode == 'diff') {";
    #line 148 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n        hideElementById('viewDiffFrame');";
    }
    
    $output .=  "\n        hideElementById('viewRawButton');\n        hideElementById(has_edited ? 'redoEditButton' : 'editButton');\n        hideElementById('smallCommentFrame');\n      }\n\n      // Switch into new mode\n      if (mode == 'edit') {\n        showElementById('editFrame');\n        showElementById('undoEditButton');\n      } else if (mode == 'raw') {\n        showElementById('viewFrame');\n        showElementById('viewPrettyPatchButton');";
    #line 163 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n        showElementById('viewDiffButton');";
    }
    
    $output .=  "\n        showElementById(has_edited ? 'redoEditButton' : 'editButton');\n        showElementById('smallCommentFrame');\n      } else if (mode == 'diff') {";
    #line 169 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n        showElementById('viewDiffFrame');";
    }
    
    $output .=  "\n        showElementById('viewRawButton');\n        showElementById(has_edited ? 'redoEditButton' : 'editButton');\n        showElementById('smallCommentFrame');\n      }\n\n      prev_mode = current_mode;\n      current_mode = mode;\n    }\n\n  function hideElementById(id)\n  {\n    var elm = document.getElementById(id);\n    if (elm) {\n      elm.style.display = 'none';\n    }\n  }\n\n  function showElementById(id, val)\n  {\n    var elm = document.getElementById(id);\n    if (elm) {\n      if (!val) val = 'inline';\n      elm.style.display = val;\n    }\n  }\n\n  function normalizeComments()\n  {\n    // Remove the unused comment field from the document so its contents\n    // do not get transmitted back to the server.\n\n    var small = document.getElementById('smallCommentFrame');\n    var big = document.getElementById('editFrame');\n    if ( small.style.display == 'none' )\n    {\n      small.parentNode.removeChild(small);\n    }\n    if ( big.style.display == 'none' )\n    {\n      big.parentNode.removeChild(big);\n    }\n  }\n  //-->\n</script>\n\n<form method=\"post\" action=\"attachment.cgi\" onsubmit=\"normalizeComments();\">\n  <input type=\"hidden\" name=\"id\" value=\"";
    #line 216 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\">\n  <input type=\"hidden\" name=\"action\" value=\"update\">\n  <input type=\"hidden\" name=\"contenttypemethod\" value=\"manual\">\n\n  <table class=\"attachment_info\" width=\"100%\">\n\n    <tr>\n      <td width=\"25%\">\n        <small>\n        <b>Description:</b><br>\n          <textarea rows=\"3\" cols=\"25\" name=\"description\" wrap=\"soft\">";
    #line 226 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('description');
        
        &$filter($output);
    };
    
    $output .=  "</textarea><br>\n\n        <b>Filename:</b><br>\n          <input type=\"text\" size=\"20\" name=\"filename\" value=\"";
    #line 229 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('filename');
        
        &$filter($output);
    };
    
    $output .=  "\"><br>\n        <b>Size: </b>";
    #line 230 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('unitconvert')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('datasize');
        
        &$filter($output);
    };
    
    $output .=  "<br>\n\n        <b>MIME Type:</b><br>\n          <input type=\"text\" size=\"20\" name=\"contenttypeentry\" value=\"";
    #line 233 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttype');
        
        &$filter($output);
    };
    
    $output .=  "\"><br>\n\n          <input type=\"checkbox\" id=\"ispatch\" name=\"ispatch\" value=\"1\"";
    #line 236 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('ispatch')) {
    $output .=  'checked="checked"';
    }
    
    $output .=  ">\n          <label for=\"ispatch\">patch</label>\n          <input type=\"checkbox\" id=\"isobsolete\" name=\"isobsolete\" value=\"1\"";
    #line 239 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('isobsolete')) {
    $output .=  'checked="checked"';
    }
    
    $output .=  ">\n          <label for=\"isobsolete\">obsolete</label><br>";
    #line 244 "template/en/custom/attachment/edit.html.tmpl"
    if (($stash->get(['Param', [ 'insidergroup' ]]) && $stash->get(['UserInGroup', [ $stash->get(['Param', [ 'insidergroup' ]]) ]]))) {
    $output .=  "\n            <input type=\"checkbox\" name=\"isprivate\" value=\"1\"";
    #line 242 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('isprivate')) {
    $output .=  ' checked';
    }
    
    $output .=  "> private<br><br>";
    }
    else {
    $output .=  "<br>";
    }
    
    $output .=  "\n";
    #line 248 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get(['flag_types', 0, 'size', 0]) > 0) {
    #line 247 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $context->process('flag/list.html.tmpl', { 'bug_id' => $stash->get('bugid'), 'attach_id' => $stash->get('attachid') });
    $output .=  "<br>";
    }
    
    $output .=  "\n\n        <div id=\"smallCommentFrame\">\n          <b>Comment (on the ";
    #line 251 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'bug', 0]);
    $output .=  "):</b><br>\n            <textarea name=\"comment\" rows=\"5\" cols=\"25\" wrap=\"soft\"></textarea><br>\n        </div>\n\n        <input type=\"submit\" value=\"Submit\"><br><br>\n        <strong>Actions:</strong> <a href=\"attachment.cgi?id=";
    #line 256 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\">View</a>";
    #line 259 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('ispatch')) {
    $output .=  "\n         | <a href=\"attachment.cgi?id=";
    #line 258 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "&action=prettypatch\">Formatted Diff</a>";
    }
    
    #line 262 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('ispatch') && $stash->get('patchviewerinstalled')) {
    $output .=  "\n         | <a href=\"attachment.cgi?id=";
    #line 261 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "&action=diff\">Diff</a>";
    }
    
    $output .=  "\n        </small>\n      </td>\n";
    #line 304 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('isviewable')) {
    $output .=  "\n        <td width=\"75%\">\n          <textarea id=\"editFrame\" name=\"comment\" style=\"height: 400px; width: 100%; display: none;\" cols=\"80\" wrap=\"soft\"></textarea>\n          <iframe id=\"viewFrame\" src=\"attachment.cgi?id=";
    #line 269 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\" style=\"height: 400px; width: 100%;\">\n            <b>You cannot view the attachment while editing it because your browser does not support IFRAMEs.\n            <a href=\"attachment.cgi?id=";
    #line 271 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\">View the attachment on a separate page</a>.</b>\n          </iframe>\n          <script type=\"text/javascript\">\n            <!--\n            if (typeof document.getElementById == \"function\") {";
    #line 278 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n              document.write('<iframe id=\"viewDiffFrame\" style=\"height: 400px; width: 100%; display: none;\"></iframe>');";
    }
    
    #line 281 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('ispatch')) {
    $output .=  "\n              document.write('<button type=\"button\" id=\"viewPrettyPatchButton\" onclick=\"viewPrettyPatch();\">View Formatted Diff</button>');";
    }
    
    $output .=  "\n              document.write('<button type=\"button\" id=\"editButton\" onclick=\"editAsComment();\">Edit Attachment As Comment</button>');\n              document.write('<button type=\"button\" id=\"undoEditButton\" onclick=\"undoEditAsComment();\" style=\"display: none;\">Undo Edit As Comment</button>');\n              document.write('<button type=\"button\" id=\"redoEditButton\" onclick=\"redoEditAsComment();\" style=\"display: none;\">Redo Edit As Comment</button>');";
    #line 287 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('patchviewerinstalled')) {
    $output .=  "\n              document.write('<button type=\"button\" id=\"viewDiffButton\" onclick=\"viewDiff();\">View Attachment As Diff</button>');";
    }
    
    $output .=  "\n              document.write('<button type=\"button\" id=\"viewRawButton\" onclick=\"viewRaw();\" style=\"display: none;\">View Attachment As Raw</button>');\n            }\n            //-->\n          </script>\n        </td>";
    }
    else {
    $output .=  "\n        <td id=\"noview\" width=\"50%\">\n          <p><b>\n            Attachment is not viewable in your browser because its MIME type \n            (";
    #line 297 "template/en/custom/attachment/edit.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('contenttype');
        
        &$filter($output);
    };
    
    $output .=  ") is not one that your browser is \n            able to display.\n          </b></p>\n          <p><b>\n            <a href=\"attachment.cgi?id=";
    #line 301 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('attachid');
    $output .=  "\">Download the attachment</a>.\n          </b></p>\n        </td>";
    }
    
    $output .=  "\n\n    </tr>\n\n  </table>\n\n  Attachments on this ";
    #line 310 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bug', 0]);
    $output .=  ":";
    #line 318 "template/en/custom/attachment/edit.html.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('attachments');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'a'} = $value;
    #line 316 "template/en/custom/attachment/edit.html.tmpl"
    if ($stash->get('a') eq $stash->get('attachid')) {
    $output .=  "\n      #";
    #line 313 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('a');
    }
    else {
    $output .=  "\n      <a href=\"attachment.cgi?id=";
    #line 315 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('a');
    $output .=  "&amp;action=edit\">#";
    #line 315 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $stash->get('a');
    $output .=  "</a>";
    }
    
    #line 317 "template/en/custom/attachment/edit.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ' |';
    }
    ;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\n\n</form>\n\n<br>\n";
    #line 324 "template/en/custom/attachment/edit.html.tmpl"
    $output .=  $context->process('global/footer.html.tmpl');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
