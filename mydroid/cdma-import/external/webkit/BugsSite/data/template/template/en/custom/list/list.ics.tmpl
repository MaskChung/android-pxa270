#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1138010588',
        'name' => 'list/list.ics.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    $output .=  "\n";
    #line 21 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    #line 21 "template/en/custom/list/list.ics.tmpl"
    # USE
    $stash->set('date',
                $context->plugin('date'));
    $output .=  "\nBEGIN:VCALENDAR\nCALSCALE:GREGORIAN\n";
    #line 24 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_prodid');
    $output .=  "\nVERSION:2.0";
    #line 53 "template/en/custom/list/list.ics.tmpl"
    
    # FOREACH 
    do {
        my ($value, $error, $oldloop);
        my $list = $stash->get('bugs');
        
        unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
            $list = Template::Config->iterator($list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($value, $error) = $list->get_first();
        eval { $oldloop = $stash->get('loop') };
        $stash->set('loop', $list);
        eval {
    LOOP:   while (! $error) {
                $stash->{'bug'} = $value;
    $output .=  "\nBEGIN:VTODO\n";
    #line 28 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_dtstart');
    $output .=  "\n";
    #line 29 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_summary');
    $output .=  "\n";
    #line 30 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_uid', { 'base_url' => $stash->get(['Param', [ 'urlbase' ]]), 'bug_id' => $stash->get(['bug', 0, 'bug_id', 0]) });
    $output .=  "\n";
    #line 31 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_url', { 'base_url' => $stash->get(['Param', [ 'urlbase' ]]), 'bug_id' => $stash->get(['bug', 0, 'bug_id', 0]) });
    $output .=  "\n";
    #line 32 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_status', { 'bug_status' => $stash->get(['bug', 0, 'bug_status', 0]) });
    $output .=  "\n";
    #line 33 "template/en/custom/list/list.ics.tmpl"
    $output .=  $context->process('ics_dtstamp');
    #line 36 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'changeddate', 0])) {
    $output .=  "\n";
    #line 35 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'LAST-MODIFIED' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['date', 0, 'format', [ $stash->get(['bug', 0, 'changedtime', 0]), '%Y%m%dT%H%M%SZ' ]]);
        
        &$filter($output);
    };
    
    }
    
    #line 39 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'percentage_complete', 0])) {
    $output .=  "\n";
    #line 38 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'PERCENT-COMPLETE' ])
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('format', [ '%d' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'percentage_complete', 0]);
        
        &$filter($output);
    };
    
        
        &$filter($output);
    };
    
    }
    
    #line 42 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'product', 0])) {
    $output .=  "\n";
    #line 41 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'X-BUGZILLA-PRODUCT' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'product', 0]);
        
        &$filter($output);
    };
    
    }
    
    #line 45 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'component', 0])) {
    $output .=  "\n";
    #line 44 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'X-BUGZILLA-COMPONENT' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'component', 0]);
        
        &$filter($output);
    };
    
    }
    
    #line 48 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'version', 0])) {
    $output .=  "\n";
    #line 47 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'X-BUGZILLA-VERSION' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'version', 0]);
        
        &$filter($output);
    };
    
    }
    
    #line 51 "template/en/custom/list/list.ics.tmpl"
    if ($stash->get(['bug', 0, 'keywords', 0])) {
    $output .=  "\n";
    #line 50 "template/en/custom/list/list.ics.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $filter = $context->filter('ics', [ 'X-BUGZILLA-KEYWORDS' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'keywords', 0]);
        
        &$filter($output);
    };
    
    }
    
    $output .=  "\nEND:VTODO";;
                ($value, $error) = $list->get_next();
            }
        };
        $stash->set('loop', $oldloop);
        die $@ if $@;
        $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
        die $error if $error;
    };
    
    $output .=  "\nEND:VCALENDAR\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'ics_status' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 77 "template/en/custom/list/list.ics.tmpl"
        $stash->set('status', '');
        #line 83 "template/en/custom/list/list.ics.tmpl"
        
        # FOREACH 
        do {
            my ($value, $error, $oldloop);
            my $list = $stash->get('closedstates');
            
            unless (UNIVERSAL::isa($list, 'Template::Iterator')) {
                $list = Template::Config->iterator($list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($value, $error) = $list->get_first();
            eval { $oldloop = $stash->get('loop') };
            $stash->set('loop', $list);
            eval {
        LOOP:   while (! $error) {
                    $stash->{'state'} = $value;
        #line 82 "template/en/custom/list/list.ics.tmpl"
        if ($stash->get('bug_status') eq $stash->get('state')) {
        #line 80 "template/en/custom/list/list.ics.tmpl"
        $stash->set('status', 'COMPLETED');
        #line 81 "template/en/custom/list/list.ics.tmpl"
        last LOOP;
        }
        ;
                    ($value, $error) = $list->get_next();
                }
            };
            $stash->set('loop', $oldloop);
            die $@ if $@;
            $error = 0 if $error && $error eq Template::Constants::STATUS_DONE;
            die $error if $error;
        };
        
        #line 90 "template/en/custom/list/list.ics.tmpl"
        if (! $stash->get('status')) {
        #line 89 "template/en/custom/list/list.ics.tmpl"
        if ($stash->get('bug_status') eq 'ASSIGNED') {
        #line 86 "template/en/custom/list/list.ics.tmpl"
        $stash->set('status', 'IN-PROGRESS');
        }
        else {
        #line 88 "template/en/custom/list/list.ics.tmpl"
        $stash->set('status', 'NEEDS-ACTION');
        }
        
        }
        
        #line 91 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'STATUS' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('status');
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_uid' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 0 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'UID' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get('bug_id') . "\@" . $stash->get('base_url'));
            
            &$filter($output);
        };
        
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_prodid' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 0 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'PRODID' ])
                      || $context->throw($context->error);
        
        $output .=  ("-//Mozilla/Bugzilla " . $stash->get('VERSION') . "//EN");
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_dtstart' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 69 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'DTSTART' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['date', 0, 'format', [ $stash->get(['bug', 0, 'opentime', 0]), '%Y%m%dT%H%M%SZ' ]]);
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_url' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 0 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'URL;VALUE=URI' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get('base_url') . "show_bug.cgi?id=" . $stash->get('bug_id'));
            
            &$filter($output);
        };
        
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_summary' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 101 "template/en/custom/list/list.ics.tmpl"
        if ($stash->get(['bug', 0, 'short_desc', 0])) {
        #line 96 "template/en/custom/list/list.ics.tmpl"
        $stash->set('summary', $stash->get(['bug', 0, 'short_desc', 0]));
        }
        elsif ($stash->get(['bug', 0, 'short_short_desc', 0])) {
        #line 98 "template/en/custom/list/list.ics.tmpl"
        $stash->set('summary', $stash->get(['bug', 0, 'short_short_desc', 0]));
        }
        else {
        #line 0 "template/en/custom/list/list.ics.tmpl"
        $stash->set('summary', ($stash->get(['terms', 0, 'Bug', 0]) . " " . $stash->get(['bug', 0, 'bug_id', 0])));
        }
        
        #line 102 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'SUMMARY' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('summary');
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'ics_dtstamp' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 73 "template/en/custom/list/list.ics.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('ics', [ 'DTSTAMP' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['date', 0, 'format', [ $stash->get(['date', 0, 'now', 0]), '%Y%m%dT%H%M%SZ' ]]);
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
